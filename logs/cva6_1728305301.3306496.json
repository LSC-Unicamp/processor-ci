{
    "name": "cva6",
    "folder": "cva6",
    "sim_files": [
        "core/frontend/btb.sv",
        "core/pmp/tb/pmp_tb.sv",
        "core/pmp/tb/tb_pkg.sv",
        "corev_apu/tb/ariane_axi_pkg.sv",
        "corev_apu/tb/ariane_axi_soc_pkg.sv",
        "corev_apu/tb/ariane_gate_tb.sv",
        "corev_apu/tb/ariane_peripherals.sv",
        "corev_apu/tb/ariane_soc_pkg.sv",
        "corev_apu/tb/ariane_tb.sv",
        "corev_apu/tb/ariane_testharness.sv",
        "corev_apu/tb/axi_intf.sv",
        "corev_apu/tb/rvfi_tracer.sv",
        "corev_apu/tb/common/SimDTM.sv",
        "corev_apu/tb/common/SimJTAG.sv",
        "corev_apu/tb/common/core_mem.sv",
        "corev_apu/tb/common/dp_ram.sv",
        "corev_apu/tb/common/mock_uart.sv",
        "corev_apu/tb/common/spike.sv",
        "corev_apu/tb/common/tb_amoport.sv",
        "corev_apu/tb/common/tb_dcache_pkg.sv",
        "corev_apu/tb/common/tb_readport.sv",
        "corev_apu/tb/common/tb_writeport.sv",
        "corev_apu/tb/common/uart.sv",
        "corev_apu/tb/tb_cva6_icache/hdl/mem_emul.sv",
        "corev_apu/tb/tb_cva6_icache/hdl/tb.sv",
        "corev_apu/tb/tb_cva6_icache/hdl/tb_pkg.sv",
        "corev_apu/tb/tb_cva6_icache/hdl/tlb_emul.sv",
        "corev_apu/tb/tb_serdiv/hdl/tb.sv",
        "corev_apu/tb/tb_serdiv/hdl/tb_div.sv",
        "corev_apu/tb/tb_serdiv/hdl/tb_pkg.sv",
        "corev_apu/tb/tb_serdiv/hdl/tb_rem.sv",
        "corev_apu/tb/tb_serdiv/hdl/tb_udiv.sv",
        "corev_apu/tb/tb_serdiv/hdl/tb_urem.sv",
        "corev_apu/tb/tb_wb_dcache/hdl/cv32a6_config_pkg.sv",
        "corev_apu/tb/tb_wb_dcache/hdl/cv64a6_config_pkg.sv",
        "corev_apu/tb/tb_wb_dcache/hdl/tb.sv",
        "corev_apu/tb/tb_wt_axi_dcache/hdl/tb.sv",
        "corev_apu/tb/tb_wt_dcache/hdl/tb.sv",
        "corev_apu/tb/tb_wt_dcache/hdl/tb_mem.sv",
        "vendor/pulp-platform/axi/src/axi_test.sv",
        "vendor/pulp-platform/fpga-support/behav/BramDwc/Testbench.sv",
        "verif/env/corev-dv/cva6_asm_program_gen.sv",
        "verif/env/corev-dv/cva6_ecall_instr_stream.sv",
        "verif/env/corev-dv/cva6_illegal_instr.sv",
        "verif/env/corev-dv/cva6_instr_base_test.sv",
        "verif/env/corev-dv/cva6_instr_gen_config.sv",
        "verif/env/corev-dv/cva6_instr_gen_tb_top.sv",
        "verif/env/corev-dv/cva6_instr_hazard_test.sv",
        "verif/env/corev-dv/cva6_instr_sequence.sv",
        "verif/env/corev-dv/cva6_instr_test_pkg.sv",
        "verif/env/corev-dv/cva6_load_store_instr_lib.sv",
        "verif/env/corev-dv/cva6_reg_hazard_stream.sv",
        "verif/env/corev-dv/cva6_signature_pkg.sv",
        "verif/env/corev-dv/cva6_unsupported_instr.sv",
        "verif/env/corev-dv/custom/cvxif_custom_instr.sv",
        "verif/env/corev-dv/custom/riscv_custom_instr_enum.sv",
        "verif/env/corev-dv/custom/riscv_zcb_instr.sv",
        "verif/env/corev-dv/custom/riscv_zcmp_instr.sv",
        "verif/env/corev-dv/custom/riscv_zicond_instr.sv",
        "verif/env/corev-dv/custom/rv32x_instr.sv",
        "verif/env/corev-dv/custom/rv32zcb_instr.sv",
        "verif/env/corev-dv/custom/rv32zcmp_instr.sv",
        "verif/env/corev-dv/custom/rv32zicond_instr.sv",
        "verif/env/corev-dv/custom/rv64zcb_instr.sv",
        "verif/env/corev-dv/target/rv32imac/riscv_core_setting.sv",
        "verif/env/corev-dv/target/rv32imcb/riscv_core_setting.sv",
        "verif/env/corev-dv/target/rv64gc/riscv_core_setting.sv",
        "verif/env/uvme/uvma_cva6_core_cntrl_agent.sv",
        "verif/env/uvme/uvma_cva6_core_cntrl_cntxt.sv",
        "verif/env/uvme/uvma_cva6_core_cntrl_drv.sv",
        "verif/env/uvme/uvme_cva6_cfg.sv",
        "verif/env/uvme/uvme_cva6_cntxt.sv",
        "verif/env/uvme/uvme_cva6_constants.sv",
        "verif/env/uvme/uvme_cva6_core_cntrl_if.sv",
        "verif/env/uvme/uvme_cva6_env.sv",
        "verif/env/uvme/uvme_cva6_macros.sv",
        "verif/env/uvme/uvme_cva6_pkg.sv",
        "verif/env/uvme/uvme_cva6_prd.sv",
        "verif/env/uvme/uvme_cva6_sb.sv",
        "verif/env/uvme/uvme_cva6_tdefs.sv",
        "verif/env/uvme/uvme_cva6_vsqr.sv",
        "verif/env/uvme/uvml_mem_vp.sv",
        "verif/env/uvme/cov/uvme_axi_covg.sv",
        "verif/env/uvme/cov/uvme_axi_ext_covg.sv",
        "verif/env/uvme/cov/uvme_cva6_config_covg.sv",
        "verif/env/uvme/cov/uvme_cva6_cov_model.sv",
        "verif/env/uvme/cov/uvme_cvxif_covg.sv",
        "verif/env/uvme/cov/uvme_exception_covg.sv",
        "verif/env/uvme/cov/uvme_illegal_instr_covg.sv",
        "verif/env/uvme/cov/uvme_interrupt_covg.sv",
        "verif/env/uvme/cov/uvme_isa_covg.sv",
        "verif/env/uvme/cvxif_vseq/uvme_cvxif_base_vseq.sv",
        "verif/env/uvme/cvxif_vseq/uvme_cvxif_vseq.sv",
        "verif/env/uvme/reg/cva6_csr_reg_adapter.sv",
        "verif/env/uvme/reg/cva6_csr_reg_block.sv",
        "verif/env/uvme/reg/cva6_csr_reg_file.sv",
        "verif/env/uvme/reg/cva6_csr_reg_predictor.sv",
        "verif/env/uvme/uvma_interrupt/uvma_interrupt_agent.sv",
        "verif/env/uvme/uvma_interrupt/uvma_interrupt_cfg.sv",
        "verif/env/uvme/uvma_interrupt/uvma_interrupt_cntxt.sv",
        "verif/env/uvme/uvma_interrupt/uvma_interrupt_constants.sv",
        "verif/env/uvme/uvma_interrupt/uvma_interrupt_drv.sv",
        "verif/env/uvme/uvma_interrupt/uvma_interrupt_if.sv",
        "verif/env/uvme/uvma_interrupt/uvma_interrupt_macros.sv",
        "verif/env/uvme/uvma_interrupt/uvma_interrupt_mon.sv",
        "verif/env/uvme/uvma_interrupt/uvma_interrupt_pkg.sv",
        "verif/env/uvme/uvma_interrupt/uvma_interrupt_sqr.sv",
        "verif/env/uvme/uvma_interrupt/uvma_interrupt_tdefs.sv",
        "verif/env/uvme/uvma_interrupt/cov/uvma_interrupt_cov_model.sv",
        "verif/env/uvme/uvma_interrupt/seq/uvma_interrupt_base_seq.sv",
        "verif/env/uvme/uvma_interrupt/seq/uvma_interrupt_seq.sv",
        "verif/env/uvme/uvma_interrupt/seq/uvma_interrupt_seq_item.sv",
        "verif/env/uvme/vseq/uvme_axi_fw_preload_seq.sv",
        "verif/env/uvme/vseq/uvme_cva6_base_vseq.sv",
        "verif/env/uvme/vseq/uvme_cva6_reset_vseq.sv",
        "verif/env/uvme/vseq/uvme_cva6_vseq_lib.sv",
        "verif/tb/core/uvma_core_cntrl_pkg.sv",
        "verif/tb/core/uvma_cva6pkg_utils.sv",
        "verif/tb/core/uvma_cva6pkg_utils_pkg.sv",
        "verif/tb/core/uvma_rvfi_pkg.sv",
        "verif/tb/core/uvmc_rvfi_reference_model_pkg.sv",
        "verif/tb/core/uvmc_rvfi_scoreboard_pkg.sv",
        "verif/tb/core/tb_components/axi_master_connect.sv",
        "verif/tb/uvmt/cva6_tb_wrapper.sv",
        "verif/tb/uvmt/uvmt_axi_assert.sv",
        "verif/tb/uvmt/uvmt_axi_switch_intf.sv",
        "verif/tb/uvmt/uvmt_cva6_axi_assert.sv",
        "verif/tb/uvmt/uvmt_cva6_constants.sv",
        "verif/tb/uvmt/uvmt_cva6_dut_wrap.sv",
        "verif/tb/uvmt/uvmt_cva6_macros.sv",
        "verif/tb/uvmt/uvmt_cva6_pkg.sv",
        "verif/tb/uvmt/uvmt_cva6_tb.sv",
        "verif/tb/uvmt/uvmt_cva6_tb_ifs.sv",
        "verif/tb/uvmt/uvmt_cva6_tdefs.sv",
        "verif/tb/uvmt/uvmt_default_inputs_intf.sv",
        "verif/tests/uvmt/base-tests/uvmt_cva6_base_test.sv",
        "verif/tests/uvmt/base-tests/uvmt_cva6_test_cfg.sv",
        "verif/tests/uvmt/compliance-tests/uvmt_cva6_firmware_test.sv",
        "verif/tests/uvmt/vseq/uvmt_cva6_vseq_lib.sv"
    ],
    "files": [
        "common/local/util/find_first_one.sv",
        "common/local/util/instr_tracer.sv",
        "common/local/util/sram.sv",
        "common/local/util/sram_cache.sv",
        "common/local/util/tc_sram_fpga_wrapper.sv",
        "common/local/util/tc_sram_wrapper.sv",
        "common/local/util/tc_sram_wrapper_cache_techno.sv",
        "core/acc_dispatcher.sv",
        "core/alu.sv",
        "core/amo_buffer.sv",
        "core/ariane_regfile.sv",
        "core/ariane_regfile_ff.sv",
        "core/ariane_regfile_fpga.sv",
        "core/axi_shim.sv",
        "core/branch_unit.sv",
        "core/commit_stage.sv",
        "core/compressed_decoder.sv",
        "core/controller.sv",
        "core/csr_buffer.sv",
        "core/csr_regfile.sv",
        "core/cva6.sv",
        "core/cva6_accel_first_pass_decoder_stub.sv",
        "core/cva6_fifo_v3.sv",
        "core/cva6_rvfi.sv",
        "core/cva6_rvfi_probes.sv",
        "core/cvxif_compressed_if_driver.sv",
        "core/cvxif_fu.sv",
        "core/cvxif_issue_register_commit_if_driver.sv",
        "core/decoder.sv",
        "core/ex_stage.sv",
        "core/fpu_wrap.sv",
        "core/id_stage.sv",
        "core/instr_realign.sv",
        "core/issue_read_operands.sv",
        "core/issue_stage.sv",
        "core/load_store_unit.sv",
        "core/load_unit.sv",
        "core/lsu_bypass.sv",
        "core/macro_decoder.sv",
        "core/mult.sv",
        "core/multiplier.sv",
        "core/perf_counters.sv",
        "core/scoreboard.sv",
        "core/serdiv.sv",
        "core/store_buffer.sv",
        "core/store_unit.sv",
        "core/cache_subsystem/amo_alu.sv",
        "core/cache_subsystem/axi_adapter.sv",
        "core/cache_subsystem/cache_ctrl.sv",
        "core/cache_subsystem/cva6_hpdcache_if_adapter.sv",
        "core/cache_subsystem/cva6_hpdcache_subsystem.sv",
        "core/cache_subsystem/cva6_hpdcache_subsystem_axi_arbiter.sv",
        "core/cache_subsystem/cva6_hpdcache_wrapper.sv",
        "core/cache_subsystem/cva6_icache.sv",
        "core/cache_subsystem/cva6_icache_axi_wrapper.sv",
        "core/cache_subsystem/miss_handler.sv",
        "core/cache_subsystem/std_cache_subsystem.sv",
        "core/cache_subsystem/std_nbdcache.sv",
        "core/cache_subsystem/tag_cmp.sv",
        "core/cache_subsystem/wt_axi_adapter.sv",
        "core/cache_subsystem/wt_cache_subsystem.sv",
        "core/cache_subsystem/wt_dcache.sv",
        "core/cache_subsystem/wt_dcache_ctrl.sv",
        "core/cache_subsystem/wt_dcache_mem.sv",
        "core/cache_subsystem/wt_dcache_missunit.sv",
        "core/cache_subsystem/wt_dcache_wbuffer.sv",
        "core/cache_subsystem/wt_l15_adapter.sv",
        "core/cva6_mmu/cva6_mmu.sv",
        "core/cva6_mmu/cva6_ptw.sv",
        "core/cva6_mmu/cva6_shared_tlb.sv",
        "core/cva6_mmu/cva6_tlb.sv",
        "core/cvxif_example/compressed_instr_decoder.sv",
        "core/cvxif_example/copro_alu.sv",
        "core/cvxif_example/cvxif_example_coprocessor.sv",
        "core/cvxif_example/instr_decoder.sv",
        "core/cvxif_example/include/cvxif_instr_pkg.sv",
        "core/frontend/bht.sv",
        "core/frontend/frontend.sv",
        "core/frontend/instr_queue.sv",
        "core/frontend/instr_scan.sv",
        "core/frontend/ras.sv",
        "core/include/ariane_pkg.sv",
        "core/include/build_config_pkg.sv",
        "core/include/config_pkg.sv",
        "core/include/cv32a60x_config_pkg_deprecated.sv",
        "core/include/cv32a65x_config_pkg.sv",
        "core/include/cv32a6_embedded_config_pkg_deprecated.sv",
        "core/include/cv32a6_ima_sv32_fpga_config_pkg.sv",
        "core/include/cv32a6_imac_sv0_config_pkg.sv",
        "core/include/cv32a6_imac_sv32_config_pkg.sv",
        "core/include/cv32a6_imafc_sv32_config_pkg.sv",
        "core/include/cv64a6_imadfcv_sv39_polara_config_pkg.sv",
        "core/include/cv64a6_imafdc_sv39_config_pkg.sv",
        "core/include/cv64a6_imafdc_sv39_hpdcache_config_pkg.sv",
        "core/include/cv64a6_imafdc_sv39_openpiton_config_pkg.sv",
        "core/include/cv64a6_imafdc_sv39_wb_config_pkg.sv",
        "core/include/cv64a6_imafdch_sv39_config_pkg.sv",
        "core/include/cv64a6_imafdch_sv39_wb_config_pkg.sv",
        "core/include/cv64a6_imafdcv_sv39_config_pkg.sv",
        "core/include/cv64a6_mmu_config_pkg.sv",
        "core/include/instr_tracer_pkg.sv",
        "core/include/riscv_pkg.sv",
        "core/include/std_cache_pkg.sv",
        "core/include/wt_cache_pkg.sv",
        "core/pmp/include/riscv.sv",
        "core/pmp/src/pmp.sv",
        "core/pmp/src/pmp_entry.sv",
        "corev_apu/bootrom/bootrom.sv",
        "corev_apu/clint/axi_lite_interface.sv",
        "corev_apu/clint/clint.sv",
        "corev_apu/fpga/src/ariane_peripherals_xilinx.sv",
        "corev_apu/fpga/src/ariane_xilinx.sv",
        "corev_apu/fpga/src/fan_ctrl.sv",
        "corev_apu/openpiton/ariane_verilog_wrap.sv",
        "corev_apu/openpiton/riscv_peripherals.sv",
        "corev_apu/src/ariane.sv",
        "pd/synth/hpdcache_sram_1rw_00000006_0000001a_00000040.sv",
        "pd/synth/hpdcache_sram_wbyteenable_1rw_00000007_00000040_00000080.sv",
        "pd/synth/tc_sram_wrapper_256_64_00000008_00000001_00000001_none_0.sv",
        "vendor/pulp-platform/axi/src/axi_atop_filter.sv",
        "vendor/pulp-platform/axi/src/axi_burst_splitter.sv",
        "vendor/pulp-platform/axi/src/axi_cdc.sv",
        "vendor/pulp-platform/axi/src/axi_cdc_dst.sv",
        "vendor/pulp-platform/axi/src/axi_cdc_src.sv",
        "vendor/pulp-platform/axi/src/axi_cut.sv",
        "vendor/pulp-platform/axi/src/axi_delayer.sv",
        "vendor/pulp-platform/axi/src/axi_demux.sv",
        "vendor/pulp-platform/axi/src/axi_dw_converter.sv",
        "vendor/pulp-platform/axi/src/axi_dw_downsizer.sv",
        "vendor/pulp-platform/axi/src/axi_dw_upsizer.sv",
        "vendor/pulp-platform/axi/src/axi_err_slv.sv",
        "vendor/pulp-platform/axi/src/axi_id_prepend.sv",
        "vendor/pulp-platform/axi/src/axi_id_remap.sv",
        "vendor/pulp-platform/axi/src/axi_id_serialize.sv",
        "vendor/pulp-platform/axi/src/axi_intf.sv",
        "vendor/pulp-platform/axi/src/axi_isolate.sv",
        "vendor/pulp-platform/axi/src/axi_iw_converter.sv",
        "vendor/pulp-platform/axi/src/axi_join.sv",
        "vendor/pulp-platform/axi/src/axi_lite_demux.sv",
        "vendor/pulp-platform/axi/src/axi_lite_join.sv",
        "vendor/pulp-platform/axi/src/axi_lite_mailbox.sv",
        "vendor/pulp-platform/axi/src/axi_lite_mux.sv",
        "vendor/pulp-platform/axi/src/axi_lite_regs.sv",
        "vendor/pulp-platform/axi/src/axi_lite_to_apb.sv",
        "vendor/pulp-platform/axi/src/axi_lite_to_axi.sv",
        "vendor/pulp-platform/axi/src/axi_lite_xbar.sv",
        "vendor/pulp-platform/axi/src/axi_modify_address.sv",
        "vendor/pulp-platform/axi/src/axi_multicut.sv",
        "vendor/pulp-platform/axi/src/axi_mux.sv",
        "vendor/pulp-platform/axi/src/axi_pkg.sv",
        "vendor/pulp-platform/axi/src/axi_serializer.sv",
        "vendor/pulp-platform/axi/src/axi_sim_mem.sv",
        "vendor/pulp-platform/axi/src/axi_to_axi_lite.sv",
        "vendor/pulp-platform/axi/src/axi_xbar.sv",
        "vendor/pulp-platform/common_cells/src/addr_decode.sv",
        "vendor/pulp-platform/common_cells/src/binary_to_gray.sv",
        "vendor/pulp-platform/common_cells/src/cb_filter.sv",
        "vendor/pulp-platform/common_cells/src/cb_filter_pkg.sv",
        "vendor/pulp-platform/common_cells/src/cc_onehot.sv",
        "vendor/pulp-platform/common_cells/src/cdc_2phase.sv",
        "vendor/pulp-platform/common_cells/src/cdc_fifo_2phase.sv",
        "vendor/pulp-platform/common_cells/src/cdc_fifo_gray.sv",
        "vendor/pulp-platform/common_cells/src/cf_math_pkg.sv",
        "vendor/pulp-platform/common_cells/src/clk_div.sv",
        "vendor/pulp-platform/common_cells/src/counter.sv",
        "vendor/pulp-platform/common_cells/src/delta_counter.sv",
        "vendor/pulp-platform/common_cells/src/ecc_decode.sv",
        "vendor/pulp-platform/common_cells/src/ecc_encode.sv",
        "vendor/pulp-platform/common_cells/src/ecc_pkg.sv",
        "vendor/pulp-platform/common_cells/src/edge_detect.sv",
        "vendor/pulp-platform/common_cells/src/edge_propagator.sv",
        "vendor/pulp-platform/common_cells/src/edge_propagator_rx.sv",
        "vendor/pulp-platform/common_cells/src/edge_propagator_tx.sv",
        "vendor/pulp-platform/common_cells/src/exp_backoff.sv",
        "vendor/pulp-platform/common_cells/src/fall_through_register.sv",
        "vendor/pulp-platform/common_cells/src/fifo_v3.sv",
        "vendor/pulp-platform/common_cells/src/gray_to_binary.sv",
        "vendor/pulp-platform/common_cells/src/id_queue.sv",
        "vendor/pulp-platform/common_cells/src/isochronous_4phase_handshake.sv",
        "vendor/pulp-platform/common_cells/src/isochronous_spill_register.sv",
        "vendor/pulp-platform/common_cells/src/lfsr.sv",
        "vendor/pulp-platform/common_cells/src/lfsr_16bit.sv",
        "vendor/pulp-platform/common_cells/src/lfsr_8bit.sv",
        "vendor/pulp-platform/common_cells/src/lzc.sv",
        "vendor/pulp-platform/common_cells/src/max_counter.sv",
        "vendor/pulp-platform/common_cells/src/mv_filter.sv",
        "vendor/pulp-platform/common_cells/src/onehot_to_bin.sv",
        "vendor/pulp-platform/common_cells/src/plru_tree.sv",
        "vendor/pulp-platform/common_cells/src/popcount.sv",
        "vendor/pulp-platform/common_cells/src/rr_arb_tree.sv",
        "vendor/pulp-platform/common_cells/src/rstgen.sv",
        "vendor/pulp-platform/common_cells/src/rstgen_bypass.sv",
        "vendor/pulp-platform/common_cells/src/serial_deglitch.sv",
        "vendor/pulp-platform/common_cells/src/shift_reg.sv",
        "vendor/pulp-platform/common_cells/src/spill_register.sv",
        "vendor/pulp-platform/common_cells/src/spill_register_flushable.sv",
        "vendor/pulp-platform/common_cells/src/stream_arbiter.sv",
        "vendor/pulp-platform/common_cells/src/stream_arbiter_flushable.sv",
        "vendor/pulp-platform/common_cells/src/stream_delay.sv",
        "vendor/pulp-platform/common_cells/src/stream_demux.sv",
        "vendor/pulp-platform/common_cells/src/stream_fifo.sv",
        "vendor/pulp-platform/common_cells/src/stream_filter.sv",
        "vendor/pulp-platform/common_cells/src/stream_fork.sv",
        "vendor/pulp-platform/common_cells/src/stream_fork_dynamic.sv",
        "vendor/pulp-platform/common_cells/src/stream_intf.sv",
        "vendor/pulp-platform/common_cells/src/stream_join.sv",
        "vendor/pulp-platform/common_cells/src/stream_mux.sv",
        "vendor/pulp-platform/common_cells/src/stream_omega_net.sv",
        "vendor/pulp-platform/common_cells/src/stream_register.sv",
        "vendor/pulp-platform/common_cells/src/stream_to_mem.sv",
        "vendor/pulp-platform/common_cells/src/stream_xbar.sv",
        "vendor/pulp-platform/common_cells/src/sub_per_hash.sv",
        "vendor/pulp-platform/common_cells/src/sync.sv",
        "vendor/pulp-platform/common_cells/src/sync_wedge.sv",
        "vendor/pulp-platform/common_cells/src/unread.sv",
        "vendor/pulp-platform/common_cells/src/deprecated/clock_divider.sv",
        "vendor/pulp-platform/common_cells/src/deprecated/clock_divider_counter.sv",
        "vendor/pulp-platform/common_cells/src/deprecated/fifo_v1.sv",
        "vendor/pulp-platform/common_cells/src/deprecated/fifo_v2.sv",
        "vendor/pulp-platform/common_cells/src/deprecated/find_first_one.sv",
        "vendor/pulp-platform/common_cells/src/deprecated/generic_LFSR_8bit.sv",
        "vendor/pulp-platform/common_cells/src/deprecated/generic_fifo.sv",
        "vendor/pulp-platform/common_cells/src/deprecated/generic_fifo_adv.sv",
        "vendor/pulp-platform/common_cells/src/deprecated/prioarbiter.sv",
        "vendor/pulp-platform/common_cells/src/deprecated/pulp_sync.sv",
        "vendor/pulp-platform/common_cells/src/deprecated/pulp_sync_wedge.sv",
        "vendor/pulp-platform/common_cells/src/deprecated/rrarbiter.sv",
        "vendor/pulp-platform/common_cells/src/deprecated/sram.sv",
        "vendor/pulp-platform/fpga-support/behav/common/include/assertions.sv",
        "vendor/pulp-platform/fpga-support/behav/common/modules/ClkRstGen.sv",
        "vendor/pulp-platform/fpga-support/rtl/AsyncDpRam.sv",
        "vendor/pulp-platform/fpga-support/rtl/AsyncThreePortRam.sv",
        "vendor/pulp-platform/fpga-support/rtl/AxiBramLogger.sv",
        "vendor/pulp-platform/fpga-support/rtl/AxiToAxiLitePc.sv",
        "vendor/pulp-platform/fpga-support/rtl/BramDwc.sv",
        "vendor/pulp-platform/fpga-support/rtl/BramLogger.sv",
        "vendor/pulp-platform/fpga-support/rtl/BramPort.sv",
        "vendor/pulp-platform/fpga-support/rtl/SyncDpRam.sv",
        "vendor/pulp-platform/fpga-support/rtl/SyncSpRam.sv",
        "vendor/pulp-platform/fpga-support/rtl/SyncSpRamBeNx32.sv",
        "vendor/pulp-platform/fpga-support/rtl/SyncSpRamBeNx64.sv",
        "vendor/pulp-platform/fpga-support/rtl/SyncTpRam.sv",
        "vendor/pulp-platform/fpga-support/rtl/TdpBramArray.sv",
        "vendor/pulp-platform/fpga-support/synth/BramDwc/deps/BramDwc.sv",
        "vendor/pulp-platform/fpga-support/synth/BramDwc/deps/BramPort.sv",
        "vendor/pulp-platform/fpga-support/synth/BramDwc/src/Top.sv",
        "vendor/pulp-platform/tech_cells_generic/src/tc_pwr.sv",
        "vendor/pulp-platform/tech_cells_generic/src/deprecated/cluster_clk_cells.sv",
        "vendor/pulp-platform/tech_cells_generic/src/deprecated/cluster_pwr_cells.sv",
        "vendor/pulp-platform/tech_cells_generic/src/deprecated/generic_memory.sv",
        "vendor/pulp-platform/tech_cells_generic/src/deprecated/generic_rom.sv",
        "vendor/pulp-platform/tech_cells_generic/src/deprecated/pad_functional.sv",
        "vendor/pulp-platform/tech_cells_generic/src/deprecated/pulp_buffer.sv",
        "vendor/pulp-platform/tech_cells_generic/src/deprecated/pulp_clk_cells.sv",
        "vendor/pulp-platform/tech_cells_generic/src/deprecated/pulp_clock_gating_async.sv",
        "vendor/pulp-platform/tech_cells_generic/src/deprecated/pulp_pwr_cells.sv",
        "vendor/pulp-platform/tech_cells_generic/src/fpga/pad_functional_xilinx.sv",
        "vendor/pulp-platform/tech_cells_generic/src/fpga/tc_clk_xilinx.sv",
        "vendor/pulp-platform/tech_cells_generic/src/fpga/tc_sram_xilinx.sv",
        "vendor/pulp-platform/tech_cells_generic/src/rtl/tc_clk.sv",
        "vendor/pulp-platform/tech_cells_generic/src/rtl/tc_sram.sv"
    ],
    "include_dirs": [],
    "repository": "https://github.com/openhwgroup/cva6",
    "top_module": "",
    "extra_flags": [],
    "language_version": "2005",
    "modules": [
        {
            "module": "find_first_one",
            "file": "common/local/util/find_first_one.sv"
        },
        {
            "module": "instr_tracer",
            "file": "common/local/util/instr_tracer.sv"
        },
        {
            "module": "contains",
            "file": "common/local/util/sram.sv"
        },
        {
            "module": "sram",
            "file": "common/local/util/sram.sv"
        },
        {
            "module": "contains",
            "file": "common/local/util/sram_cache.sv"
        },
        {
            "module": "sram_cache",
            "file": "common/local/util/sram_cache.sv"
        },
        {
            "module": "tc_sram_wrapper",
            "file": "common/local/util/tc_sram_fpga_wrapper.sv"
        },
        {
            "module": "tc_sram_wrapper",
            "file": "common/local/util/tc_sram_wrapper.sv"
        },
        {
            "module": "tc_sram_wrapper_cache_techno",
            "file": "common/local/util/tc_sram_wrapper_cache_techno.sv"
        },
        {
            "module": "acc_dispatcher",
            "file": "core/acc_dispatcher.sv"
        },
        {
            "module": "alu",
            "file": "core/alu.sv"
        },
        {
            "module": "amo_buffer",
            "file": "core/amo_buffer.sv"
        },
        {
            "module": "ariane_regfile_lol",
            "file": "core/ariane_regfile.sv"
        },
        {
            "module": "ariane_regfile",
            "file": "core/ariane_regfile_ff.sv"
        },
        {
            "module": "ariane_regfile_fpga",
            "file": "core/ariane_regfile_fpga.sv"
        },
        {
            "module": "axi_shim",
            "file": "core/axi_shim.sv"
        },
        {
            "module": "branch_unit",
            "file": "core/branch_unit.sv"
        },
        {
            "module": "commit_stage",
            "file": "core/commit_stage.sv"
        },
        {
            "module": "is",
            "file": "core/compressed_decoder.sv"
        },
        {
            "module": "compressed_decoder",
            "file": "core/compressed_decoder.sv"
        },
        {
            "module": "controller",
            "file": "core/controller.sv"
        },
        {
            "module": "csr_buffer",
            "file": "core/csr_buffer.sv"
        },
        {
            "module": "csr_regfile",
            "file": "core/csr_regfile.sv"
        },
        {
            "module": "registers",
            "file": "core/csr_regfile.sv"
        },
        {
            "module": "CSRs",
            "file": "core/csr_regfile.sv"
        },
        {
            "module": "fired",
            "file": "core/csr_regfile.sv"
        },
        {
            "module": "cva6",
            "file": "core/cva6.sv"
        },
        {
            "module": "cva6_accel_first_pass_decoder",
            "file": "core/cva6_accel_first_pass_decoder_stub.sv"
        },
        {
            "module": "stub",
            "file": "core/cva6_accel_first_pass_decoder_stub.sv"
        },
        {
            "module": "cva6_fifo_v3",
            "file": "core/cva6_fifo_v3.sv"
        },
        {
            "module": "cva6_rvfi",
            "file": "core/cva6_rvfi.sv"
        },
        {
            "module": "cva6_rvfi_probes",
            "file": "core/cva6_rvfi_probes.sv"
        },
        {
            "module": "cvxif_compressed_if_driver",
            "file": "core/cvxif_compressed_if_driver.sv"
        },
        {
            "module": "cvxif_fu",
            "file": "core/cvxif_fu.sv"
        },
        {
            "module": "cvxif_issue_register_commit_if_driver",
            "file": "core/cvxif_issue_register_commit_if_driver.sv"
        },
        {
            "module": "decoder",
            "file": "core/decoder.sv"
        },
        {
            "module": "is",
            "file": "core/decoder.sv"
        },
        {
            "module": "ex_stage",
            "file": "core/ex_stage.sv"
        },
        {
            "module": "fpu_wrap",
            "file": "core/fpu_wrap.sv"
        },
        {
            "module": "id_stage",
            "file": "core/id_stage.sv"
        },
        {
            "module": "takes",
            "file": "core/instr_realign.sv"
        },
        {
            "module": "instr_realign",
            "file": "core/instr_realign.sv"
        },
        {
            "module": "issue_read_operands",
            "file": "core/issue_read_operands.sv"
        },
        {
            "module": "issue_stage",
            "file": "core/issue_stage.sv"
        },
        {
            "module": "load_store_unit",
            "file": "core/load_store_unit.sv"
        },
        {
            "module": "load_unit",
            "file": "core/load_unit.sv"
        },
        {
            "module": "lsu_bypass",
            "file": "core/lsu_bypass.sv"
        },
        {
            "module": "macro_decoder",
            "file": "core/macro_decoder.sv"
        },
        {
            "module": "mult",
            "file": "core/mult.sv"
        },
        {
            "module": "multiplier",
            "file": "core/multiplier.sv"
        },
        {
            "module": "perf_counters",
            "file": "core/perf_counters.sv"
        },
        {
            "module": "scoreboard",
            "file": "core/scoreboard.sv"
        },
        {
            "module": "serdiv",
            "file": "core/serdiv.sv"
        },
        {
            "module": "store_buffer",
            "file": "core/store_buffer.sv"
        },
        {
            "module": "store_unit",
            "file": "core/store_unit.sv"
        },
        {
            "module": "amo_alu",
            "file": "core/cache_subsystem/amo_alu.sv"
        },
        {
            "module": "axi_adapter",
            "file": "core/cache_subsystem/axi_adapter.sv"
        },
        {
            "module": "cache_ctrl",
            "file": "core/cache_subsystem/cache_ctrl.sv"
        },
        {
            "module": "cva6_hpdcache_if_adapter",
            "file": "core/cache_subsystem/cva6_hpdcache_if_adapter.sv"
        },
        {
            "module": "cva6_hpdcache_subsystem",
            "file": "core/cache_subsystem/cva6_hpdcache_subsystem.sv"
        },
        {
            "module": "cva6_hpdcache_subsystem_axi_arbiter",
            "file": "core/cache_subsystem/cva6_hpdcache_subsystem_axi_arbiter.sv"
        },
        {
            "module": "cva6_hpdcache_wrapper",
            "file": "core/cache_subsystem/cva6_hpdcache_wrapper.sv"
        },
        {
            "module": "cva6_icache",
            "file": "core/cache_subsystem/cva6_icache.sv"
        },
        {
            "module": "to",
            "file": "core/cache_subsystem/cva6_icache_axi_wrapper.sv"
        },
        {
            "module": "cva6_icache_axi_wrapper",
            "file": "core/cache_subsystem/cva6_icache_axi_wrapper.sv"
        },
        {
            "module": "miss_handler",
            "file": "core/cache_subsystem/miss_handler.sv"
        },
        {
            "module": "axi_adapter_arbiter",
            "file": "core/cache_subsystem/miss_handler.sv"
        },
        {
            "module": "std_cache_subsystem",
            "file": "core/cache_subsystem/std_cache_subsystem.sv"
        },
        {
            "module": "std_nbdcache",
            "file": "core/cache_subsystem/std_nbdcache.sv"
        },
        {
            "module": "tag_cmp",
            "file": "core/cache_subsystem/tag_cmp.sv"
        },
        {
            "module": "to",
            "file": "core/cache_subsystem/wt_axi_adapter.sv"
        },
        {
            "module": "wt_axi_adapter",
            "file": "core/cache_subsystem/wt_axi_adapter.sv"
        },
        {
            "module": "wt_cache_subsystem",
            "file": "core/cache_subsystem/wt_cache_subsystem.sv"
        },
        {
            "module": "wt_dcache",
            "file": "core/cache_subsystem/wt_dcache.sv"
        },
        {
            "module": "wt_dcache_ctrl",
            "file": "core/cache_subsystem/wt_dcache_ctrl.sv"
        },
        {
            "module": "wt_dcache_mem",
            "file": "core/cache_subsystem/wt_dcache_mem.sv"
        },
        {
            "module": "wt_dcache_missunit",
            "file": "core/cache_subsystem/wt_dcache_missunit.sv"
        },
        {
            "module": "wt_dcache_wbuffer",
            "file": "core/cache_subsystem/wt_dcache_wbuffer.sv"
        },
        {
            "module": "to",
            "file": "core/cache_subsystem/wt_l15_adapter.sv"
        },
        {
            "module": "wt_l15_adapter",
            "file": "core/cache_subsystem/wt_l15_adapter.sv"
        },
        {
            "module": "is",
            "file": "core/cva6_mmu/cva6_mmu.sv"
        },
        {
            "module": "cva6_mmu",
            "file": "core/cva6_mmu/cva6_mmu.sv"
        },
        {
            "module": "is",
            "file": "core/cva6_mmu/cva6_ptw.sv"
        },
        {
            "module": "cva6_ptw",
            "file": "core/cva6_mmu/cva6_ptw.sv"
        },
        {
            "module": "is",
            "file": "core/cva6_mmu/cva6_shared_tlb.sv"
        },
        {
            "module": "cva6_shared_tlb",
            "file": "core/cva6_mmu/cva6_shared_tlb.sv"
        },
        {
            "module": "is",
            "file": "core/cva6_mmu/cva6_tlb.sv"
        },
        {
            "module": "cva6_tlb",
            "file": "core/cva6_mmu/cva6_tlb.sv"
        },
        {
            "module": "compressed_instr_decoder",
            "file": "core/cvxif_example/compressed_instr_decoder.sv"
        },
        {
            "module": "copro_alu",
            "file": "core/cvxif_example/copro_alu.sv"
        },
        {
            "module": "cvxif_example_coprocessor",
            "file": "core/cvxif_example/cvxif_example_coprocessor.sv"
        },
        {
            "module": "instr_decoder",
            "file": "core/cvxif_example/instr_decoder.sv"
        },
        {
            "module": "bht",
            "file": "core/frontend/bht.sv"
        },
        {
            "module": "is",
            "file": "core/frontend/btb.sv"
        },
        {
            "module": "both",
            "file": "core/frontend/btb.sv"
        },
        {
            "module": "btb",
            "file": "core/frontend/btb.sv"
        },
        {
            "module": "interfaces",
            "file": "core/frontend/frontend.sv"
        },
        {
            "module": "frontend",
            "file": "core/frontend/frontend.sv"
        },
        {
            "module": "instr_queue",
            "file": "core/frontend/instr_queue.sv"
        },
        {
            "module": "instr_scan",
            "file": "core/frontend/instr_scan.sv"
        },
        {
            "module": "ras",
            "file": "core/frontend/ras.sv"
        },
        {
            "module": "needs",
            "file": "core/include/ariane_pkg.sv"
        },
        {
            "module": "logic",
            "file": "core/include/config_pkg.sv"
        },
        {
            "module": "that",
            "file": "core/include/config_pkg.sv"
        },
        {
            "module": "pmp",
            "file": "core/pmp/src/pmp.sv"
        },
        {
            "module": "pmp_entry",
            "file": "core/pmp/src/pmp_entry.sv"
        },
        {
            "module": "pmp_tb",
            "file": "core/pmp/tb/pmp_tb.sv"
        },
        {
            "module": "bootrom",
            "file": "corev_apu/bootrom/bootrom.sv"
        },
        {
            "module": "axi_lite_interface",
            "file": "corev_apu/clint/axi_lite_interface.sv"
        },
        {
            "module": "clint",
            "file": "corev_apu/clint/clint.sv"
        },
        {
            "module": "clint_sync_wedge",
            "file": "corev_apu/clint/clint.sv"
        },
        {
            "module": "module",
            "file": "corev_apu/clint/clint.sv"
        },
        {
            "module": "ariane_peripherals",
            "file": "corev_apu/fpga/src/ariane_peripherals_xilinx.sv"
        },
        {
            "module": "ariane_xilinx",
            "file": "corev_apu/fpga/src/ariane_xilinx.sv"
        },
        {
            "module": "dm_top",
            "file": "corev_apu/fpga/src/ariane_xilinx.sv"
        },
        {
            "module": "fan_ctrl",
            "file": "corev_apu/fpga/src/fan_ctrl.sv"
        },
        {
            "module": "ariane_verilog_wrap",
            "file": "corev_apu/openpiton/ariane_verilog_wrap.sv"
        },
        {
            "module": "base",
            "file": "corev_apu/openpiton/ariane_verilog_wrap.sv"
        },
        {
            "module": "riscv_peripherals",
            "file": "corev_apu/openpiton/riscv_peripherals.sv"
        },
        {
            "module": "reset",
            "file": "corev_apu/openpiton/riscv_peripherals.sv"
        },
        {
            "module": "is",
            "file": "corev_apu/openpiton/riscv_peripherals.sv"
        },
        {
            "module": "and",
            "file": "corev_apu/openpiton/riscv_peripherals.sv"
        },
        {
            "module": "dm_top",
            "file": "corev_apu/openpiton/riscv_peripherals.sv"
        },
        {
            "module": "ariane",
            "file": "corev_apu/src/ariane.sv"
        },
        {
            "module": "ariane_gate_tb",
            "file": "corev_apu/tb/ariane_gate_tb.sv"
        },
        {
            "module": "ariane_peripherals",
            "file": "corev_apu/tb/ariane_peripherals.sv"
        },
        {
            "module": "ariane_tb",
            "file": "corev_apu/tb/ariane_tb.sv"
        },
        {
            "module": "ariane_testharness",
            "file": "corev_apu/tb/ariane_testharness.sv"
        },
        {
            "module": "dm_top",
            "file": "corev_apu/tb/ariane_testharness.sv"
        },
        {
            "module": "rvfi_tracer",
            "file": "corev_apu/tb/rvfi_tracer.sv"
        },
        {
            "module": "SimDTM",
            "file": "corev_apu/tb/common/SimDTM.sv"
        },
        {
            "module": "SimJTAG",
            "file": "corev_apu/tb/common/SimJTAG.sv"
        },
        {
            "module": "core_mem",
            "file": "corev_apu/tb/common/core_mem.sv"
        },
        {
            "module": "dp_ram",
            "file": "corev_apu/tb/common/dp_ram.sv"
        },
        {
            "module": "mock_uart",
            "file": "corev_apu/tb/common/mock_uart.sv"
        },
        {
            "module": "spike",
            "file": "corev_apu/tb/common/spike.sv"
        },
        {
            "module": "takes",
            "file": "corev_apu/tb/common/uart.sv"
        },
        {
            "module": "mem_emul",
            "file": "corev_apu/tb/tb_cva6_icache/hdl/mem_emul.sv"
        },
        {
            "module": "tb",
            "file": "corev_apu/tb/tb_cva6_icache/hdl/tb.sv"
        },
        {
            "module": "tlb_emul",
            "file": "corev_apu/tb/tb_cva6_icache/hdl/tlb_emul.sv"
        },
        {
            "module": "tb",
            "file": "corev_apu/tb/tb_serdiv/hdl/tb.sv"
        },
        {
            "module": "tb",
            "file": "corev_apu/tb/tb_wb_dcache/hdl/tb.sv"
        },
        {
            "module": "tb",
            "file": "corev_apu/tb/tb_wt_axi_dcache/hdl/tb.sv"
        },
        {
            "module": "tb",
            "file": "corev_apu/tb/tb_wt_dcache/hdl/tb.sv"
        },
        {
            "module": "tb_mem",
            "file": "corev_apu/tb/tb_wt_dcache/hdl/tb_mem.sv"
        },
        {
            "module": "hpdcache_sram_1rw_00000006_0000001a_00000040",
            "file": "pd/synth/hpdcache_sram_1rw_00000006_0000001a_00000040.sv"
        },
        {
            "module": "hpdcache_sram_wbyteenable_1rw_00000007_00000040_00000080",
            "file": "pd/synth/hpdcache_sram_wbyteenable_1rw_00000007_00000040_00000080.sv"
        },
        {
            "module": "tc_sram_wrapper_256_64_00000008_00000001_00000001_none_0",
            "file": "pd/synth/tc_sram_wrapper_256_64_00000008_00000001_00000001_none_0.sv"
        },
        {
            "module": "filters",
            "file": "vendor/pulp-platform/axi/src/axi_atop_filter.sv"
        },
        {
            "module": "guarantees",
            "file": "vendor/pulp-platform/axi/src/axi_atop_filter.sv"
        },
        {
            "module": "is",
            "file": "vendor/pulp-platform/axi/src/axi_atop_filter.sv"
        },
        {
            "module": "is",
            "file": "vendor/pulp-platform/axi/src/axi_atop_filter.sv"
        },
        {
            "module": "ensures",
            "file": "vendor/pulp-platform/axi/src/axi_atop_filter.sv"
        },
        {
            "module": "axi_atop_filter",
            "file": "vendor/pulp-platform/axi/src/axi_atop_filter.sv"
        },
        {
            "module": "axi_atop_filter_intf",
            "file": "vendor/pulp-platform/axi/src/axi_atop_filter.sv"
        },
        {
            "module": "does",
            "file": "vendor/pulp-platform/axi/src/axi_burst_splitter.sv"
        },
        {
            "module": "does",
            "file": "vendor/pulp-platform/axi/src/axi_burst_splitter.sv"
        },
        {
            "module": "if",
            "file": "vendor/pulp-platform/axi/src/axi_burst_splitter.sv"
        },
        {
            "module": "axi_burst_splitter",
            "file": "vendor/pulp-platform/axi/src/axi_burst_splitter.sv"
        },
        {
            "module": "of",
            "file": "vendor/pulp-platform/axi/src/axi_burst_splitter.sv"
        },
        {
            "module": "axi_burst_splitter_ax_chan",
            "file": "vendor/pulp-platform/axi/src/axi_burst_splitter.sv"
        },
        {
            "module": "of",
            "file": "vendor/pulp-platform/axi/src/axi_burst_splitter.sv"
        },
        {
            "module": "axi_burst_splitter_counters",
            "file": "vendor/pulp-platform/axi/src/axi_burst_splitter.sv"
        },
        {
            "module": "instantiates",
            "file": "vendor/pulp-platform/axi/src/axi_cdc.sv"
        },
        {
            "module": "axi_cdc",
            "file": "vendor/pulp-platform/axi/src/axi_cdc.sv"
        },
        {
            "module": "axi_cdc_intf",
            "file": "vendor/pulp-platform/axi/src/axi_cdc.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/axi/src/axi_cdc.sv"
        },
        {
            "module": "instantiates",
            "file": "vendor/pulp-platform/axi/src/axi_cdc_dst.sv"
        },
        {
            "module": "axi_cdc_dst",
            "file": "vendor/pulp-platform/axi/src/axi_cdc_dst.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/axi/src/axi_cdc_dst.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/axi/src/axi_cdc_dst.sv"
        },
        {
            "module": "instantiates",
            "file": "vendor/pulp-platform/axi/src/axi_cdc_src.sv"
        },
        {
            "module": "axi_cdc_src",
            "file": "vendor/pulp-platform/axi/src/axi_cdc_src.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/axi/src/axi_cdc_src.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/axi/src/axi_cdc_src.sv"
        },
        {
            "module": "axi_cut",
            "file": "vendor/pulp-platform/axi/src/axi_cut.sv"
        },
        {
            "module": "axi_cut_intf",
            "file": "vendor/pulp-platform/axi/src/axi_cut.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/axi/src/axi_cut.sv"
        },
        {
            "module": "that",
            "file": "vendor/pulp-platform/axi/src/axi_delayer.sv"
        },
        {
            "module": "axi_delayer",
            "file": "vendor/pulp-platform/axi/src/axi_delayer.sv"
        },
        {
            "module": "axi_delayer_intf",
            "file": "vendor/pulp-platform/axi/src/axi_delayer.sv"
        },
        {
            "module": "axi_demux",
            "file": "vendor/pulp-platform/axi/src/axi_demux.sv"
        },
        {
            "module": "param",
            "file": "vendor/pulp-platform/axi/src/axi_demux.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/axi/src/axi_demux.sv"
        },
        {
            "module": "axi_demux_intf",
            "file": "vendor/pulp-platform/axi/src/axi_demux.sv"
        },
        {
            "module": "axi_dw_converter",
            "file": "vendor/pulp-platform/axi/src/axi_dw_converter.sv"
        },
        {
            "module": "axi_dw_converter_intf",
            "file": "vendor/pulp-platform/axi/src/axi_dw_converter.sv"
        },
        {
            "module": "axi_dw_downsizer",
            "file": "vendor/pulp-platform/axi/src/axi_dw_downsizer.sv"
        },
        {
            "module": "axi_dw_upsizer",
            "file": "vendor/pulp-platform/axi/src/axi_dw_upsizer.sv"
        },
        {
            "module": "always",
            "file": "vendor/pulp-platform/axi/src/axi_err_slv.sv"
        },
        {
            "module": "optionally",
            "file": "vendor/pulp-platform/axi/src/axi_err_slv.sv"
        },
        {
            "module": "axi_err_slv",
            "file": "vendor/pulp-platform/axi/src/axi_err_slv.sv"
        },
        {
            "module": "may",
            "file": "vendor/pulp-platform/axi/src/axi_err_slv.sv"
        },
        {
            "module": "prepends",
            "file": "vendor/pulp-platform/axi/src/axi_id_prepend.sv"
        },
        {
            "module": "axi_id_prepend",
            "file": "vendor/pulp-platform/axi/src/axi_id_prepend.sv"
        },
        {
            "module": "is",
            "file": "vendor/pulp-platform/axi/src/axi_id_remap.sv"
        },
        {
            "module": "retains",
            "file": "vendor/pulp-platform/axi/src/axi_id_remap.sv"
        },
        {
            "module": "axi_id_remap",
            "file": "vendor/pulp-platform/axi/src/axi_id_remap.sv"
        },
        {
            "module": "of",
            "file": "vendor/pulp-platform/axi/src/axi_id_remap.sv"
        },
        {
            "module": "contains",
            "file": "vendor/pulp-platform/axi/src/axi_id_remap.sv"
        },
        {
            "module": "has",
            "file": "vendor/pulp-platform/axi/src/axi_id_remap.sv"
        },
        {
            "module": "axi_id_remap_table",
            "file": "vendor/pulp-platform/axi/src/axi_id_remap.sv"
        },
        {
            "module": "for",
            "file": "vendor/pulp-platform/axi/src/axi_id_remap.sv"
        },
        {
            "module": "axi_id_remap_intf",
            "file": "vendor/pulp-platform/axi/src/axi_id_remap.sv"
        },
        {
            "module": "is",
            "file": "vendor/pulp-platform/axi/src/axi_id_serialize.sv"
        },
        {
            "module": "maps",
            "file": "vendor/pulp-platform/axi/src/axi_id_serialize.sv"
        },
        {
            "module": "contains",
            "file": "vendor/pulp-platform/axi/src/axi_id_serialize.sv"
        },
        {
            "module": "axi_id_serialize",
            "file": "vendor/pulp-platform/axi/src/axi_id_serialize.sv"
        },
        {
            "module": "for",
            "file": "vendor/pulp-platform/axi/src/axi_id_serialize.sv"
        },
        {
            "module": "axi_id_serialize_intf",
            "file": "vendor/pulp-platform/axi/src/axi_id_serialize.sv"
        },
        {
            "module": "can",
            "file": "vendor/pulp-platform/axi/src/axi_isolate.sv"
        },
        {
            "module": "counts",
            "file": "vendor/pulp-platform/axi/src/axi_isolate.sv"
        },
        {
            "module": "axi_isolate",
            "file": "vendor/pulp-platform/axi/src/axi_isolate.sv"
        },
        {
            "module": "axi_isolate_intf",
            "file": "vendor/pulp-platform/axi/src/axi_isolate.sv"
        },
        {
            "module": "can",
            "file": "vendor/pulp-platform/axi/src/axi_iw_converter.sv"
        },
        {
            "module": "axi_iw_converter",
            "file": "vendor/pulp-platform/axi/src/axi_iw_converter.sv"
        },
        {
            "module": "for",
            "file": "vendor/pulp-platform/axi/src/axi_iw_converter.sv"
        },
        {
            "module": "axi_iw_converter_intf",
            "file": "vendor/pulp-platform/axi/src/axi_iw_converter.sv"
        },
        {
            "module": "axi_join_intf",
            "file": "vendor/pulp-platform/axi/src/axi_join.sv"
        },
        {
            "module": "axi_lite_demux",
            "file": "vendor/pulp-platform/axi/src/axi_lite_demux.sv"
        },
        {
            "module": "here",
            "file": "vendor/pulp-platform/axi/src/axi_lite_demux.sv"
        },
        {
            "module": "axi_lite_demux_intf",
            "file": "vendor/pulp-platform/axi/src/axi_lite_demux.sv"
        },
        {
            "module": "axi_lite_join_intf",
            "file": "vendor/pulp-platform/axi/src/axi_lite_join.sv"
        },
        {
            "module": "axi_lite_mailbox",
            "file": "vendor/pulp-platform/axi/src/axi_lite_mailbox.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/axi/src/axi_lite_mailbox.sv"
        },
        {
            "module": "axi_lite_mailbox_intf",
            "file": "vendor/pulp-platform/axi/src/axi_lite_mailbox.sv"
        },
        {
            "module": "multiplexes",
            "file": "vendor/pulp-platform/axi/src/axi_lite_mux.sv"
        },
        {
            "module": "axi_lite_mux",
            "file": "vendor/pulp-platform/axi/src/axi_lite_mux.sv"
        },
        {
            "module": "here",
            "file": "vendor/pulp-platform/axi/src/axi_lite_mux.sv"
        },
        {
            "module": "axi_lite_mux_intf",
            "file": "vendor/pulp-platform/axi/src/axi_lite_mux.sv"
        },
        {
            "module": "contains",
            "file": "vendor/pulp-platform/axi/src/axi_lite_regs.sv"
        },
        {
            "module": "is",
            "file": "vendor/pulp-platform/axi/src/axi_lite_regs.sv"
        },
        {
            "module": "can",
            "file": "vendor/pulp-platform/axi/src/axi_lite_regs.sv"
        },
        {
            "module": "axi_lite_regs",
            "file": "vendor/pulp-platform/axi/src/axi_lite_regs.sv"
        },
        {
            "module": "only",
            "file": "vendor/pulp-platform/axi/src/axi_lite_regs.sv"
        },
        {
            "module": "only",
            "file": "vendor/pulp-platform/axi/src/axi_lite_regs.sv"
        },
        {
            "module": "is",
            "file": "vendor/pulp-platform/axi/src/axi_lite_regs.sv"
        },
        {
            "module": "for",
            "file": "vendor/pulp-platform/axi/src/axi_lite_regs.sv"
        },
        {
            "module": "axi_lite_regs_intf",
            "file": "vendor/pulp-platform/axi/src/axi_lite_regs.sv"
        },
        {
            "module": "has",
            "file": "vendor/pulp-platform/axi/src/axi_lite_to_apb.sv"
        },
        {
            "module": "from",
            "file": "vendor/pulp-platform/axi/src/axi_lite_to_apb.sv"
        },
        {
            "module": "will",
            "file": "vendor/pulp-platform/axi/src/axi_lite_to_apb.sv"
        },
        {
            "module": "and",
            "file": "vendor/pulp-platform/axi/src/axi_lite_to_apb.sv"
        },
        {
            "module": "axi_lite_to_apb",
            "file": "vendor/pulp-platform/axi/src/axi_lite_to_apb.sv"
        },
        {
            "module": "axi_lite_to_apb_intf",
            "file": "vendor/pulp-platform/axi/src/axi_lite_to_apb.sv"
        },
        {
            "module": "axi_lite_to_axi",
            "file": "vendor/pulp-platform/axi/src/axi_lite_to_axi.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/axi/src/axi_lite_to_axi.sv"
        },
        {
            "module": "axi_lite_xbar",
            "file": "vendor/pulp-platform/axi/src/axi_lite_xbar.sv"
        },
        {
            "module": "to",
            "file": "vendor/pulp-platform/axi/src/axi_lite_xbar.sv"
        },
        {
            "module": "axi_lite_xbar_intf",
            "file": "vendor/pulp-platform/axi/src/axi_lite_xbar.sv"
        },
        {
            "module": "axi_modify_address",
            "file": "vendor/pulp-platform/axi/src/axi_modify_address.sv"
        },
        {
            "module": "axi_modify_address_intf",
            "file": "vendor/pulp-platform/axi/src/axi_modify_address.sv"
        },
        {
            "module": "axi_multicut",
            "file": "vendor/pulp-platform/axi/src/axi_multicut.sv"
        },
        {
            "module": "axi_multicut_intf",
            "file": "vendor/pulp-platform/axi/src/axi_multicut.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/axi/src/axi_multicut.sv"
        },
        {
            "module": "multiplexes",
            "file": "vendor/pulp-platform/axi/src/axi_mux.sv"
        },
        {
            "module": "axi_mux",
            "file": "vendor/pulp-platform/axi/src/axi_mux.sv"
        },
        {
            "module": "axi_mux_intf",
            "file": "vendor/pulp-platform/axi/src/axi_mux.sv"
        },
        {
            "module": "contains",
            "file": "vendor/pulp-platform/axi/src/axi_serializer.sv"
        },
        {
            "module": "axi_serializer",
            "file": "vendor/pulp-platform/axi/src/axi_serializer.sv"
        },
        {
            "module": "axi_serializer_intf",
            "file": "vendor/pulp-platform/axi/src/axi_serializer.sv"
        },
        {
            "module": "in",
            "file": "vendor/pulp-platform/axi/src/axi_sim_mem.sv"
        },
        {
            "module": "does",
            "file": "vendor/pulp-platform/axi/src/axi_sim_mem.sv"
        },
        {
            "module": "axi_sim_mem",
            "file": "vendor/pulp-platform/axi/src/axi_sim_mem.sv"
        },
        {
            "module": "logs",
            "file": "vendor/pulp-platform/axi/src/axi_test.sv"
        },
        {
            "module": "axi_chan_logger",
            "file": "vendor/pulp-platform/axi/src/axi_test.sv"
        },
        {
            "module": "axi_to_axi_lite",
            "file": "vendor/pulp-platform/axi/src/axi_to_axi_lite.sv"
        },
        {
            "module": "has",
            "file": "vendor/pulp-platform/axi/src/axi_to_axi_lite.sv"
        },
        {
            "module": "handles",
            "file": "vendor/pulp-platform/axi/src/axi_to_axi_lite.sv"
        },
        {
            "module": "does",
            "file": "vendor/pulp-platform/axi/src/axi_to_axi_lite.sv"
        },
        {
            "module": "axi_to_axi_lite_id_reflect",
            "file": "vendor/pulp-platform/axi/src/axi_to_axi_lite.sv"
        },
        {
            "module": "axi_to_axi_lite_intf",
            "file": "vendor/pulp-platform/axi/src/axi_to_axi_lite.sv"
        },
        {
            "module": "axi_xbar",
            "file": "vendor/pulp-platform/axi/src/axi_xbar.sv"
        },
        {
            "module": "axi_xbar_intf",
            "file": "vendor/pulp-platform/axi/src/axi_xbar.sv"
        },
        {
            "module": "checks",
            "file": "vendor/pulp-platform/common_cells/src/addr_decode.sv"
        },
        {
            "module": "addr_decode",
            "file": "vendor/pulp-platform/common_cells/src/addr_decode.sv"
        },
        {
            "module": "binary_to_gray",
            "file": "vendor/pulp-platform/common_cells/src/binary_to_gray.sv"
        },
        {
            "module": "implements",
            "file": "vendor/pulp-platform/common_cells/src/cb_filter.sv"
        },
        {
            "module": "cb_filter",
            "file": "vendor/pulp-platform/common_cells/src/cb_filter.sv"
        },
        {
            "module": "hash_block",
            "file": "vendor/pulp-platform/common_cells/src/cb_filter.sv"
        },
        {
            "module": "cc_onehot",
            "file": "vendor/pulp-platform/common_cells/src/cc_onehot.sv"
        },
        {
            "module": "cdc_2phase",
            "file": "vendor/pulp-platform/common_cells/src/cdc_2phase.sv"
        },
        {
            "module": "cdc_2phase_src",
            "file": "vendor/pulp-platform/common_cells/src/cdc_2phase.sv"
        },
        {
            "module": "cdc_2phase_dst",
            "file": "vendor/pulp-platform/common_cells/src/cdc_2phase.sv"
        },
        {
            "module": "cdc_fifo_2phase",
            "file": "vendor/pulp-platform/common_cells/src/cdc_fifo_2phase.sv"
        },
        {
            "module": "cdc_fifo_gray",
            "file": "vendor/pulp-platform/common_cells/src/cdc_fifo_gray.sv"
        },
        {
            "module": "cdc_fifo_gray_src",
            "file": "vendor/pulp-platform/common_cells/src/cdc_fifo_gray.sv"
        },
        {
            "module": "cdc_fifo_gray_dst",
            "file": "vendor/pulp-platform/common_cells/src/cdc_fifo_gray.sv"
        },
        {
            "module": "clk_div",
            "file": "vendor/pulp-platform/common_cells/src/clk_div.sv"
        },
        {
            "module": "counter",
            "file": "vendor/pulp-platform/common_cells/src/counter.sv"
        },
        {
            "module": "delta_counter",
            "file": "vendor/pulp-platform/common_cells/src/delta_counter.sv"
        },
        {
            "module": "receives",
            "file": "vendor/pulp-platform/common_cells/src/ecc_decode.sv"
        },
        {
            "module": "will",
            "file": "vendor/pulp-platform/common_cells/src/ecc_decode.sv"
        },
        {
            "module": "ecc_decode",
            "file": "vendor/pulp-platform/common_cells/src/ecc_decode.sv"
        },
        {
            "module": "receives",
            "file": "vendor/pulp-platform/common_cells/src/ecc_encode.sv"
        },
        {
            "module": "ecc_encode",
            "file": "vendor/pulp-platform/common_cells/src/ecc_encode.sv"
        },
        {
            "module": "edge_detect",
            "file": "vendor/pulp-platform/common_cells/src/edge_detect.sv"
        },
        {
            "module": "edge_propagator",
            "file": "vendor/pulp-platform/common_cells/src/edge_propagator.sv"
        },
        {
            "module": "edge_propagator_rx",
            "file": "vendor/pulp-platform/common_cells/src/edge_propagator_rx.sv"
        },
        {
            "module": "edge_propagator_tx",
            "file": "vendor/pulp-platform/common_cells/src/edge_propagator_tx.sv"
        },
        {
            "module": "exp_backoff",
            "file": "vendor/pulp-platform/common_cells/src/exp_backoff.sv"
        },
        {
            "module": "at",
            "file": "vendor/pulp-platform/common_cells/src/fall_through_register.sv"
        },
        {
            "module": "to",
            "file": "vendor/pulp-platform/common_cells/src/fall_through_register.sv"
        },
        {
            "module": "fall_through_register",
            "file": "vendor/pulp-platform/common_cells/src/fall_through_register.sv"
        },
        {
            "module": "fifo_v3",
            "file": "vendor/pulp-platform/common_cells/src/fifo_v3.sv"
        },
        {
            "module": "gray_to_binary",
            "file": "vendor/pulp-platform/common_cells/src/gray_to_binary.sv"
        },
        {
            "module": "id_queue",
            "file": "vendor/pulp-platform/common_cells/src/id_queue.sv"
        },
        {
            "module": "differs",
            "file": "vendor/pulp-platform/common_cells/src/isochronous_4phase_handshake.sv"
        },
        {
            "module": "isochronous_4phase_handshake",
            "file": "vendor/pulp-platform/common_cells/src/isochronous_4phase_handshake.sv"
        },
        {
            "module": "is",
            "file": "vendor/pulp-platform/common_cells/src/isochronous_spill_register.sv"
        },
        {
            "module": "isochronous_spill_register",
            "file": "vendor/pulp-platform/common_cells/src/isochronous_spill_register.sv"
        },
        {
            "module": "lfsr",
            "file": "vendor/pulp-platform/common_cells/src/lfsr.sv"
        },
        {
            "module": "lfsr_16bit",
            "file": "vendor/pulp-platform/common_cells/src/lfsr_16bit.sv"
        },
        {
            "module": "lfsr_8bit",
            "file": "vendor/pulp-platform/common_cells/src/lfsr_8bit.sv"
        },
        {
            "module": "lzc",
            "file": "vendor/pulp-platform/common_cells/src/lzc.sv"
        },
        {
            "module": "max_counter",
            "file": "vendor/pulp-platform/common_cells/src/max_counter.sv"
        },
        {
            "module": "mv_filter",
            "file": "vendor/pulp-platform/common_cells/src/mv_filter.sv"
        },
        {
            "module": "onehot_to_bin",
            "file": "vendor/pulp-platform/common_cells/src/onehot_to_bin.sv"
        },
        {
            "module": "plru_tree",
            "file": "vendor/pulp-platform/common_cells/src/plru_tree.sv"
        },
        {
            "module": "calculates",
            "file": "vendor/pulp-platform/common_cells/src/popcount.sv"
        },
        {
            "module": "pads",
            "file": "vendor/pulp-platform/common_cells/src/popcount.sv"
        },
        {
            "module": "popcount",
            "file": "vendor/pulp-platform/common_cells/src/popcount.sv"
        },
        {
            "module": "has",
            "file": "vendor/pulp-platform/common_cells/src/rr_arb_tree.sv"
        },
        {
            "module": "timing",
            "file": "vendor/pulp-platform/common_cells/src/rr_arb_tree.sv"
        },
        {
            "module": "the",
            "file": "vendor/pulp-platform/common_cells/src/rr_arb_tree.sv"
        },
        {
            "module": "also",
            "file": "vendor/pulp-platform/common_cells/src/rr_arb_tree.sv"
        },
        {
            "module": "the",
            "file": "vendor/pulp-platform/common_cells/src/rr_arb_tree.sv"
        },
        {
            "module": "rr_arb_tree",
            "file": "vendor/pulp-platform/common_cells/src/rr_arb_tree.sv"
        },
        {
            "module": "rstgen",
            "file": "vendor/pulp-platform/common_cells/src/rstgen.sv"
        },
        {
            "module": "is",
            "file": "vendor/pulp-platform/common_cells/src/rstgen_bypass.sv"
        },
        {
            "module": "rstgen_bypass",
            "file": "vendor/pulp-platform/common_cells/src/rstgen_bypass.sv"
        },
        {
            "module": "serial_deglitch",
            "file": "vendor/pulp-platform/common_cells/src/serial_deglitch.sv"
        },
        {
            "module": "shift_reg",
            "file": "vendor/pulp-platform/common_cells/src/shift_reg.sv"
        },
        {
            "module": "spill_register",
            "file": "vendor/pulp-platform/common_cells/src/spill_register.sv"
        },
        {
            "module": "spill_register_flushable",
            "file": "vendor/pulp-platform/common_cells/src/spill_register_flushable.sv"
        },
        {
            "module": "stream_arbiter",
            "file": "vendor/pulp-platform/common_cells/src/stream_arbiter.sv"
        },
        {
            "module": "stream_arbiter_flushable",
            "file": "vendor/pulp-platform/common_cells/src/stream_arbiter_flushable.sv"
        },
        {
            "module": "stream_delay",
            "file": "vendor/pulp-platform/common_cells/src/stream_delay.sv"
        },
        {
            "module": "has",
            "file": "vendor/pulp-platform/common_cells/src/stream_demux.sv"
        },
        {
            "module": "stream_demux",
            "file": "vendor/pulp-platform/common_cells/src/stream_demux.sv"
        },
        {
            "module": "stream_fifo",
            "file": "vendor/pulp-platform/common_cells/src/stream_fifo.sv"
        },
        {
            "module": "stream_filter",
            "file": "vendor/pulp-platform/common_cells/src/stream_filter.sv"
        },
        {
            "module": "has",
            "file": "vendor/pulp-platform/common_cells/src/stream_fork.sv"
        },
        {
            "module": "stream_fork",
            "file": "vendor/pulp-platform/common_cells/src/stream_fork.sv"
        },
        {
            "module": "has",
            "file": "vendor/pulp-platform/common_cells/src/stream_fork_dynamic.sv"
        },
        {
            "module": "stream_fork_dynamic",
            "file": "vendor/pulp-platform/common_cells/src/stream_fork_dynamic.sv"
        },
        {
            "module": "stream_join",
            "file": "vendor/pulp-platform/common_cells/src/stream_join.sv"
        },
        {
            "module": "stream_mux",
            "file": "vendor/pulp-platform/common_cells/src/stream_mux.sv"
        },
        {
            "module": "stream_omega_net",
            "file": "vendor/pulp-platform/common_cells/src/stream_omega_net.sv"
        },
        {
            "module": "will",
            "file": "vendor/pulp-platform/common_cells/src/stream_omega_net.sv"
        },
        {
            "module": "stream_register",
            "file": "vendor/pulp-platform/common_cells/src/stream_register.sv"
        },
        {
            "module": "stream_to_mem",
            "file": "vendor/pulp-platform/common_cells/src/stream_to_mem.sv"
        },
        {
            "module": "stream_xbar",
            "file": "vendor/pulp-platform/common_cells/src/stream_xbar.sv"
        },
        {
            "module": "implements",
            "file": "vendor/pulp-platform/common_cells/src/sub_per_hash.sv"
        },
        {
            "module": "sub_per_hash",
            "file": "vendor/pulp-platform/common_cells/src/sub_per_hash.sv"
        },
        {
            "module": "sync",
            "file": "vendor/pulp-platform/common_cells/src/sync.sv"
        },
        {
            "module": "sync_wedge",
            "file": "vendor/pulp-platform/common_cells/src/sync_wedge.sv"
        },
        {
            "module": "unread",
            "file": "vendor/pulp-platform/common_cells/src/unread.sv"
        },
        {
            "module": "clock_divider",
            "file": "vendor/pulp-platform/common_cells/src/deprecated/clock_divider.sv"
        },
        {
            "module": "clock_divider_counter",
            "file": "vendor/pulp-platform/common_cells/src/deprecated/clock_divider_counter.sv"
        },
        {
            "module": "fifo",
            "file": "vendor/pulp-platform/common_cells/src/deprecated/fifo_v1.sv"
        },
        {
            "module": "fifo_v2",
            "file": "vendor/pulp-platform/common_cells/src/deprecated/fifo_v2.sv"
        },
        {
            "module": "find_first_one",
            "file": "vendor/pulp-platform/common_cells/src/deprecated/find_first_one.sv"
        },
        {
            "module": "generic_LFSR_8bit",
            "file": "vendor/pulp-platform/common_cells/src/deprecated/generic_LFSR_8bit.sv"
        },
        {
            "module": "generic_fifo",
            "file": "vendor/pulp-platform/common_cells/src/deprecated/generic_fifo.sv"
        },
        {
            "module": "generic_fifo_adv",
            "file": "vendor/pulp-platform/common_cells/src/deprecated/generic_fifo_adv.sv"
        },
        {
            "module": "prioarbiter",
            "file": "vendor/pulp-platform/common_cells/src/deprecated/prioarbiter.sv"
        },
        {
            "module": "pulp_sync",
            "file": "vendor/pulp-platform/common_cells/src/deprecated/pulp_sync.sv"
        },
        {
            "module": "pulp_sync_wedge",
            "file": "vendor/pulp-platform/common_cells/src/deprecated/pulp_sync_wedge.sv"
        },
        {
            "module": "rrarbiter",
            "file": "vendor/pulp-platform/common_cells/src/deprecated/rrarbiter.sv"
        },
        {
            "module": "sram",
            "file": "vendor/pulp-platform/common_cells/src/deprecated/sram.sv"
        },
        {
            "module": "Testbench",
            "file": "vendor/pulp-platform/fpga-support/behav/BramDwc/Testbench.sv"
        },
        {
            "module": "generates",
            "file": "vendor/pulp-platform/fpga-support/behav/common/modules/ClkRstGen.sv"
        },
        {
            "module": "ClkRstGen",
            "file": "vendor/pulp-platform/fpga-support/behav/common/modules/ClkRstGen.sv"
        },
        {
            "module": "is",
            "file": "vendor/pulp-platform/fpga-support/rtl/AsyncDpRam.sv"
        },
        {
            "module": "AsyncDpRam",
            "file": "vendor/pulp-platform/fpga-support/rtl/AsyncDpRam.sv"
        },
        {
            "module": "is",
            "file": "vendor/pulp-platform/fpga-support/rtl/AsyncThreePortRam.sv"
        },
        {
            "module": "AsyncThreePortRam",
            "file": "vendor/pulp-platform/fpga-support/rtl/AsyncThreePortRam.sv"
        },
        {
            "module": "is",
            "file": "vendor/pulp-platform/fpga-support/rtl/AxiBramLogger.sv"
        },
        {
            "module": "AxiBramLogger",
            "file": "vendor/pulp-platform/fpga-support/rtl/AxiBramLogger.sv"
        },
        {
            "module": "converts",
            "file": "vendor/pulp-platform/fpga-support/rtl/AxiToAxiLitePc.sv"
        },
        {
            "module": "does",
            "file": "vendor/pulp-platform/fpga-support/rtl/AxiToAxiLitePc.sv"
        },
        {
            "module": "AxiToAxiLitePc",
            "file": "vendor/pulp-platform/fpga-support/rtl/AxiToAxiLitePc.sv"
        },
        {
            "module": "performs",
            "file": "vendor/pulp-platform/fpga-support/rtl/BramDwc.sv"
        },
        {
            "module": "is",
            "file": "vendor/pulp-platform/fpga-support/rtl/BramDwc.sv"
        },
        {
            "module": "BramDwc",
            "file": "vendor/pulp-platform/fpga-support/rtl/BramDwc.sv"
        },
        {
            "module": "BramLogger",
            "file": "vendor/pulp-platform/fpga-support/rtl/BramLogger.sv"
        },
        {
            "module": "is",
            "file": "vendor/pulp-platform/fpga-support/rtl/SyncDpRam.sv"
        },
        {
            "module": "SyncDpRam",
            "file": "vendor/pulp-platform/fpga-support/rtl/SyncDpRam.sv"
        },
        {
            "module": "is",
            "file": "vendor/pulp-platform/fpga-support/rtl/SyncSpRam.sv"
        },
        {
            "module": "SyncSpRam",
            "file": "vendor/pulp-platform/fpga-support/rtl/SyncSpRam.sv"
        },
        {
            "module": "contains",
            "file": "vendor/pulp-platform/fpga-support/rtl/SyncSpRamBeNx32.sv"
        },
        {
            "module": "SyncSpRamBeNx32",
            "file": "vendor/pulp-platform/fpga-support/rtl/SyncSpRamBeNx32.sv"
        },
        {
            "module": "contains",
            "file": "vendor/pulp-platform/fpga-support/rtl/SyncSpRamBeNx64.sv"
        },
        {
            "module": "SyncSpRamBeNx64",
            "file": "vendor/pulp-platform/fpga-support/rtl/SyncSpRamBeNx64.sv"
        },
        {
            "module": "is",
            "file": "vendor/pulp-platform/fpga-support/rtl/SyncTpRam.sv"
        },
        {
            "module": "SyncTpRam",
            "file": "vendor/pulp-platform/fpga-support/rtl/SyncTpRam.sv"
        },
        {
            "module": "contains",
            "file": "vendor/pulp-platform/fpga-support/rtl/TdpBramArray.sv"
        },
        {
            "module": "is",
            "file": "vendor/pulp-platform/fpga-support/rtl/TdpBramArray.sv"
        },
        {
            "module": "TdpBramArray",
            "file": "vendor/pulp-platform/fpga-support/rtl/TdpBramArray.sv"
        },
        {
            "module": "performs",
            "file": "vendor/pulp-platform/fpga-support/synth/BramDwc/deps/BramDwc.sv"
        },
        {
            "module": "is",
            "file": "vendor/pulp-platform/fpga-support/synth/BramDwc/deps/BramDwc.sv"
        },
        {
            "module": "BramDwc",
            "file": "vendor/pulp-platform/fpga-support/synth/BramDwc/deps/BramDwc.sv"
        },
        {
            "module": "Top",
            "file": "vendor/pulp-platform/fpga-support/synth/BramDwc/src/Top.sv"
        },
        {
            "module": "tc_pwr_level_shifter_in",
            "file": "vendor/pulp-platform/tech_cells_generic/src/tc_pwr.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/tc_pwr.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/tc_pwr.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/tc_pwr.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/tc_pwr.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/tc_pwr.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/tc_pwr.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/tc_pwr.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/tc_pwr.sv"
        },
        {
            "module": "cluster_clock_and2",
            "file": "vendor/pulp-platform/tech_cells_generic/src/deprecated/cluster_clk_cells.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/deprecated/cluster_clk_cells.sv"
        },
        {
            "module": "cluster_clock_gating",
            "file": "vendor/pulp-platform/tech_cells_generic/src/deprecated/cluster_clk_cells.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/deprecated/cluster_clk_cells.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/deprecated/cluster_clk_cells.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/deprecated/cluster_clk_cells.sv"
        },
        {
            "module": "cluster_level_shifter_in",
            "file": "vendor/pulp-platform/tech_cells_generic/src/deprecated/cluster_pwr_cells.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/deprecated/cluster_pwr_cells.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/deprecated/cluster_pwr_cells.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/deprecated/cluster_pwr_cells.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/deprecated/cluster_pwr_cells.sv"
        },
        {
            "module": "generic_memory",
            "file": "vendor/pulp-platform/tech_cells_generic/src/deprecated/generic_memory.sv"
        },
        {
            "module": "generic_rom",
            "file": "vendor/pulp-platform/tech_cells_generic/src/deprecated/generic_rom.sv"
        },
        {
            "module": "pad_functional_pd",
            "file": "vendor/pulp-platform/tech_cells_generic/src/deprecated/pad_functional.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/deprecated/pad_functional.sv"
        },
        {
            "module": "pulp_buffer",
            "file": "vendor/pulp-platform/tech_cells_generic/src/deprecated/pulp_buffer.sv"
        },
        {
            "module": "pulp_clock_and2",
            "file": "vendor/pulp-platform/tech_cells_generic/src/deprecated/pulp_clk_cells.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/deprecated/pulp_clk_cells.sv"
        },
        {
            "module": "pulp_clock_gating",
            "file": "vendor/pulp-platform/tech_cells_generic/src/deprecated/pulp_clk_cells.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/deprecated/pulp_clk_cells.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/deprecated/pulp_clk_cells.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/deprecated/pulp_clk_cells.sv"
        },
        {
            "module": "pulp_clock_delay",
            "file": "vendor/pulp-platform/tech_cells_generic/src/deprecated/pulp_clk_cells.sv"
        },
        {
            "module": "pulp_clock_gating_async",
            "file": "vendor/pulp-platform/tech_cells_generic/src/deprecated/pulp_clock_gating_async.sv"
        },
        {
            "module": "pulp_level_shifter_in",
            "file": "vendor/pulp-platform/tech_cells_generic/src/deprecated/pulp_pwr_cells.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/deprecated/pulp_pwr_cells.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/deprecated/pulp_pwr_cells.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/deprecated/pulp_pwr_cells.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/deprecated/pulp_pwr_cells.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/deprecated/pulp_pwr_cells.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/deprecated/pulp_pwr_cells.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/deprecated/pulp_pwr_cells.sv"
        },
        {
            "module": "pad_functional_pd",
            "file": "vendor/pulp-platform/tech_cells_generic/src/fpga/pad_functional_xilinx.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/fpga/pad_functional_xilinx.sv"
        },
        {
            "module": "tc_clk_and2",
            "file": "vendor/pulp-platform/tech_cells_generic/src/fpga/tc_clk_xilinx.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/fpga/tc_clk_xilinx.sv"
        },
        {
            "module": "tc_clk_gating",
            "file": "vendor/pulp-platform/tech_cells_generic/src/fpga/tc_clk_xilinx.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/fpga/tc_clk_xilinx.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/fpga/tc_clk_xilinx.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/fpga/tc_clk_xilinx.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/fpga/tc_clk_xilinx.sv"
        },
        {
            "module": "tc_sram",
            "file": "vendor/pulp-platform/tech_cells_generic/src/fpga/tc_sram_xilinx.sv"
        },
        {
            "module": "tc_clk_and2",
            "file": "vendor/pulp-platform/tech_cells_generic/src/rtl/tc_clk.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/rtl/tc_clk.sv"
        },
        {
            "module": "tc_clk_gating",
            "file": "vendor/pulp-platform/tech_cells_generic/src/rtl/tc_clk.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/rtl/tc_clk.sv"
        },
        {
            "module": "tc_clk_mux2",
            "file": "vendor/pulp-platform/tech_cells_generic/src/rtl/tc_clk.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/rtl/tc_clk.sv"
        },
        {
            "module": "module",
            "file": "vendor/pulp-platform/tech_cells_generic/src/rtl/tc_clk.sv"
        },
        {
            "module": "tc_clk_delay",
            "file": "vendor/pulp-platform/tech_cells_generic/src/rtl/tc_clk.sv"
        },
        {
            "module": "of",
            "file": "vendor/pulp-platform/tech_cells_generic/src/rtl/tc_sram.sv"
        },
        {
            "module": "issues",
            "file": "vendor/pulp-platform/tech_cells_generic/src/rtl/tc_sram.sv"
        },
        {
            "module": "tc_sram",
            "file": "vendor/pulp-platform/tech_cells_generic/src/rtl/tc_sram.sv"
        },
        {
            "module": "cva6_instr_gen_tb_top",
            "file": "verif/env/corev-dv/cva6_instr_gen_tb_top.sv"
        },
        {
            "module": "axi_master_connect",
            "file": "verif/tb/core/tb_components/axi_master_connect.sv"
        },
        {
            "module": "cva6_tb_wrapper",
            "file": "verif/tb/uvmt/cva6_tb_wrapper.sv"
        },
        {
            "module": "uvmt_axi_assert",
            "file": "verif/tb/uvmt/uvmt_axi_assert.sv"
        },
        {
            "module": "uvmt_cva6_axi_assert",
            "file": "verif/tb/uvmt/uvmt_cva6_axi_assert.sv"
        },
        {
            "module": "uvmt_cva6_dut_wrap",
            "file": "verif/tb/uvmt/uvmt_cva6_dut_wrap.sv"
        },
        {
            "module": "uvmt_cva6_tb",
            "file": "verif/tb/uvmt/uvmt_cva6_tb.sv"
        },
        {
            "module": "for",
            "file": "verif/tb/uvmt/uvmt_cva6_tb.sv"
        }
    ],
    "module_graph": {
        "find_first_one": [],
        "instr_tracer": [
            "instr_tracer",
            "cva6"
        ],
        "contains": [],
        "sram": [
            "contains",
            "std_nbdcache",
            "ariane_gate_tb",
            "ariane_testharness",
            "cva6_tb_wrapper"
        ],
        "sram_cache": [
            "cva6_icache"
        ],
        "tc_sram_wrapper": [
            "tc_sram_wrapper",
            "tc_sram_wrapper"
        ],
        "tc_sram_wrapper_cache_techno": [
            "contains",
            "tc_sram_wrapper_cache_techno"
        ],
        "acc_dispatcher": [],
        "alu": [],
        "amo_buffer": [
            "amo_buffer"
        ],
        "ariane_regfile_lol": [
            "ariane_regfile_lol"
        ],
        "ariane_regfile": [
            "issue_read_operands",
            "issue_read_operands"
        ],
        "ariane_regfile_fpga": [],
        "axi_shim": [
            "to"
        ],
        "branch_unit": [
            "branch_unit"
        ],
        "commit_stage": [
            "cva6"
        ],
        "is": [
            "store_buffer",
            "std_cache_subsystem",
            "in",
            "of"
        ],
        "compressed_decoder": [],
        "controller": [
            "cva6"
        ],
        "csr_buffer": [],
        "csr_regfile": [
            "cva6"
        ],
        "registers": [],
        "CSRs": [],
        "fired": [],
        "cva6": [
            "ariane",
            "cva6_tb_wrapper"
        ],
        "cva6_accel_first_pass_decoder": [],
        "stub": [],
        "cva6_fifo_v3": [
            "cva6_fifo_v3",
            "to",
            "to",
            "to",
            "to",
            "to",
            "to",
            "wt_dcache_wbuffer",
            "instr_queue"
        ],
        "cva6_rvfi": [
            "ariane_gate_tb",
            "ariane_testharness"
        ],
        "cva6_rvfi_probes": [],
        "cvxif_compressed_if_driver": [
            "id_stage"
        ],
        "cvxif_fu": [],
        "cvxif_issue_register_commit_if_driver": [
            "issue_read_operands"
        ],
        "decoder": [],
        "ex_stage": [
            "cva6"
        ],
        "fpu_wrap": [],
        "id_stage": [
            "cva6",
            "id_stage"
        ],
        "takes": [],
        "instr_realign": [],
        "issue_read_operands": [
            "issue_stage"
        ],
        "issue_stage": [
            "cva6"
        ],
        "load_store_unit": [],
        "load_unit": [
            "load_store_unit"
        ],
        "lsu_bypass": [],
        "macro_decoder": [],
        "mult": [],
        "multiplier": [
            "mult"
        ],
        "perf_counters": [],
        "scoreboard": [
            "scoreboard"
        ],
        "serdiv": [
            "mult",
            "tb"
        ],
        "store_buffer": [
            "store_unit"
        ],
        "store_unit": [],
        "amo_alu": [],
        "axi_adapter": [
            "miss_handler",
            "miss_handler",
            "ariane_xilinx"
        ],
        "cache_ctrl": [],
        "cva6_hpdcache_if_adapter": [
            "cva6_hpdcache_wrapper",
            "cva6_hpdcache_wrapper"
        ],
        "cva6_hpdcache_subsystem": [],
        "cva6_hpdcache_subsystem_axi_arbiter": [
            "cva6_hpdcache_subsystem"
        ],
        "cva6_hpdcache_wrapper": [
            "cva6_hpdcache_subsystem"
        ],
        "cva6_icache": [
            "cva6_hpdcache_subsystem",
            "to",
            "tb"
        ],
        "to": [
            "acc_dispatcher",
            "cva6_icache",
            "is"
        ],
        "cva6_icache_axi_wrapper": [
            "std_cache_subsystem"
        ],
        "miss_handler": [
            "std_nbdcache"
        ],
        "axi_adapter_arbiter": [
            "miss_handler"
        ],
        "std_cache_subsystem": [
            "cva6"
        ],
        "std_nbdcache": [
            "std_cache_subsystem",
            "tb"
        ],
        "tag_cmp": [
            "std_nbdcache",
            "tag_cmp"
        ],
        "wt_axi_adapter": [
            "wt_cache_subsystem"
        ],
        "wt_cache_subsystem": [
            "tb"
        ],
        "wt_dcache": [
            "wt_cache_subsystem",
            "tb"
        ],
        "wt_dcache_ctrl": [],
        "wt_dcache_mem": [
            "wt_dcache"
        ],
        "wt_dcache_missunit": [
            "wt_dcache"
        ],
        "wt_dcache_wbuffer": [
            "wt_dcache"
        ],
        "wt_l15_adapter": [],
        "cva6_mmu": [],
        "cva6_ptw": [
            "is"
        ],
        "cva6_shared_tlb": [
            "is"
        ],
        "cva6_tlb": [
            "is"
        ],
        "compressed_instr_decoder": [
            "cvxif_example_coprocessor"
        ],
        "copro_alu": [
            "cvxif_example_coprocessor"
        ],
        "cvxif_example_coprocessor": [],
        "instr_decoder": [
            "cvxif_example_coprocessor"
        ],
        "bht": [
            "bht"
        ],
        "both": [],
        "btb": [],
        "interfaces": [],
        "frontend": [
            "cva6"
        ],
        "instr_queue": [
            "interfaces"
        ],
        "instr_scan": [],
        "ras": [],
        "needs": [],
        "logic": [
            "needs",
            "logic",
            "logic",
            "logic",
            "logic"
        ],
        "that": [],
        "pmp": [
            "is",
            "pmp_tb"
        ],
        "pmp_entry": [
            "pmp_entry"
        ],
        "pmp_tb": [],
        "bootrom": [
            "riscv_peripherals",
            "ariane_gate_tb",
            "ariane_testharness"
        ],
        "axi_lite_interface": [
            "clint"
        ],
        "clint": [
            "riscv_peripherals",
            "ariane_testharness"
        ],
        "clint_sync_wedge": [],
        "module": [
            "bootrom",
            "ariane_xilinx",
            "fan_ctrl",
            "SimDTM",
            "that",
            "axi_join_intf",
            "axi_lite_join_intf",
            "edge_detect",
            "edge_propagator",
            "edge_propagator_rx",
            "edge_propagator_tx",
            "rstgen",
            "stream_filter",
            "unread",
            "tc_pwr_level_shifter_in",
            "tc_pwr_level_shifter_in",
            "tc_pwr_level_shifter_in",
            "tc_pwr_level_shifter_in",
            "tc_pwr_level_shifter_in",
            "tc_pwr_level_shifter_in",
            "tc_pwr_level_shifter_in",
            "tc_pwr_level_shifter_in",
            "tc_pwr_level_shifter_in",
            "cluster_clock_and2",
            "cluster_clock_and2",
            "cluster_clock_and2",
            "cluster_clock_and2",
            "cluster_clock_and2",
            "cluster_level_shifter_in",
            "cluster_level_shifter_in",
            "cluster_level_shifter_in",
            "cluster_level_shifter_in",
            "cluster_level_shifter_in",
            "pad_functional_pd",
            "pad_functional_pd",
            "pulp_buffer",
            "pulp_clock_and2",
            "pulp_clock_and2",
            "pulp_clock_and2",
            "pulp_clock_and2",
            "pulp_clock_and2",
            "pulp_clock_and2",
            "pulp_level_shifter_in",
            "pulp_level_shifter_in",
            "pulp_level_shifter_in",
            "pulp_level_shifter_in",
            "pulp_level_shifter_in",
            "pulp_level_shifter_in",
            "pulp_level_shifter_in",
            "pulp_level_shifter_in",
            "pad_functional_pd",
            "pad_functional_pd",
            "tc_clk_and2",
            "tc_clk_and2",
            "tc_clk_and2",
            "tc_clk_and2",
            "tc_clk_and2",
            "tc_clk_and2",
            "tc_clk_and2",
            "tc_clk_and2",
            "tc_clk_and2",
            "tc_clk_and2",
            "tc_clk_and2",
            "axi_master_connect"
        ],
        "ariane_peripherals": [
            "ariane_peripherals",
            "ariane_xilinx",
            "ariane_peripherals"
        ],
        "ariane_xilinx": [],
        "dm_top": [
            "ariane_xilinx"
        ],
        "fan_ctrl": [
            "ariane_xilinx",
            "ariane_xilinx",
            "ariane_xilinx"
        ],
        "ariane_verilog_wrap": [],
        "base": [],
        "riscv_peripherals": [
            "riscv_peripherals"
        ],
        "reset": [],
        "and": [
            "csr_regfile",
            "interfaces"
        ],
        "ariane": [
            "ariane_verilog_wrap",
            "ariane_testharness"
        ],
        "ariane_gate_tb": [],
        "ariane_tb": [],
        "ariane_testharness": [
            "ariane_tb",
            "ariane_testharness"
        ],
        "rvfi_tracer": [
            "ariane_gate_tb",
            "ariane_testharness",
            "rvfi_tracer",
            "cva6_tb_wrapper"
        ],
        "SimDTM": [],
        "SimJTAG": [],
        "core_mem": [
            "core_mem"
        ],
        "dp_ram": [],
        "mock_uart": [
            "ariane_peripherals",
            "ariane_gate_tb",
            "ariane_peripherals"
        ],
        "spike": [
            "ariane_testharness",
            "spike"
        ],
        "mem_emul": [
            "tb"
        ],
        "tb": [],
        "tlb_emul": [],
        "tb_mem": [
            "tb"
        ],
        "hpdcache_sram_1rw_00000006_0000001a_00000040": [],
        "hpdcache_sram_wbyteenable_1rw_00000007_00000040_00000080": [],
        "tc_sram_wrapper_256_64_00000008_00000001_00000001_none_0": [
            "tc_sram_wrapper_256_64_00000008_00000001_00000001_none_0"
        ],
        "filters": [],
        "guarantees": [],
        "ensures": [],
        "axi_atop_filter": [],
        "axi_atop_filter_intf": [
            "filters"
        ],
        "does": [],
        "if": [],
        "axi_burst_splitter": [
            "axi_to_axi_lite"
        ],
        "of": [
            "interfaces",
            "cdc_2phase"
        ],
        "axi_burst_splitter_ax_chan": [
            "does"
        ],
        "axi_burst_splitter_counters": [
            "does"
        ],
        "instantiates": [],
        "axi_cdc": [
            "instantiates"
        ],
        "axi_cdc_intf": [
            "instantiates"
        ],
        "axi_cdc_dst": [
            "instantiates",
            "instantiates"
        ],
        "axi_cdc_src": [
            "instantiates"
        ],
        "axi_cut": [
            "axi_cut"
        ],
        "axi_cut_intf": [
            "axi_cut"
        ],
        "axi_delayer": [],
        "axi_delayer_intf": [
            "ariane_testharness",
            "that"
        ],
        "axi_demux": [
            "axi_demux",
            "axi_dw_downsizer",
            "axi_dw_upsizer",
            "is",
            "axi_xbar"
        ],
        "param": [],
        "axi_demux_intf": [
            "axi_demux"
        ],
        "axi_dw_converter": [
            "axi_dw_converter"
        ],
        "axi_dw_converter_intf": [
            "axi_dw_converter"
        ],
        "axi_dw_downsizer": [
            "axi_dw_downsizer"
        ],
        "axi_dw_upsizer": [
            "axi_dw_upsizer"
        ],
        "always": [
            "is"
        ],
        "optionally": [],
        "axi_err_slv": [
            "does",
            "axi_dw_downsizer",
            "axi_dw_upsizer",
            "always",
            "axi_lite_xbar",
            "axi_xbar"
        ],
        "may": [],
        "prepends": [],
        "axi_id_prepend": [
            "is"
        ],
        "retains": [],
        "axi_id_remap": [],
        "has": [],
        "axi_id_remap_table": [
            "is",
            "is"
        ],
        "for": [
            "contains",
            "contains",
            "instr_queue",
            "uvmt_cva6_tb"
        ],
        "axi_id_remap_intf": [
            "is"
        ],
        "maps": [],
        "axi_id_serialize": [
            "can"
        ],
        "axi_id_serialize_intf": [
            "is"
        ],
        "can": [],
        "counts": [],
        "axi_isolate": [
            "can"
        ],
        "axi_isolate_intf": [],
        "axi_iw_converter": [
            "can"
        ],
        "axi_iw_converter_intf": [
            "can"
        ],
        "axi_join_intf": [],
        "axi_lite_demux": [
            "axi_lite_demux",
            "axi_lite_xbar"
        ],
        "here": [
            "instr_tracer"
        ],
        "axi_lite_demux_intf": [
            "axi_lite_demux"
        ],
        "axi_lite_join_intf": [],
        "axi_lite_mailbox": [
            "axi_lite_mailbox"
        ],
        "axi_lite_mailbox_intf": [
            "axi_lite_mailbox"
        ],
        "multiplexes": [],
        "axi_lite_mux": [
            "multiplexes"
        ],
        "axi_lite_mux_intf": [
            "multiplexes"
        ],
        "axi_lite_regs": [],
        "only": [
            "issue_read_operands"
        ],
        "axi_lite_regs_intf": [
            "contains"
        ],
        "from": [
            "controller"
        ],
        "will": [
            "lsu_bypass"
        ],
        "axi_lite_to_apb": [
            "has"
        ],
        "axi_lite_to_apb_intf": [
            "has"
        ],
        "axi_lite_to_axi": [
            "axi_lite_xbar"
        ],
        "axi_lite_xbar": [
            "axi_lite_xbar"
        ],
        "axi_lite_xbar_intf": [
            "axi_lite_xbar"
        ],
        "axi_modify_address": [
            "axi_modify_address"
        ],
        "axi_modify_address_intf": [],
        "axi_multicut": [
            "axi_multicut"
        ],
        "axi_multicut_intf": [
            "axi_multicut"
        ],
        "axi_mux": [],
        "axi_mux_intf": [
            "multiplexes"
        ],
        "axi_serializer": [],
        "axi_serializer_intf": [],
        "in": [
            "mock_uart"
        ],
        "axi_sim_mem": [],
        "logs": [],
        "axi_chan_logger": [],
        "axi_to_axi_lite": [
            "axi_to_axi_lite"
        ],
        "handles": [],
        "axi_to_axi_lite_id_reflect": [
            "axi_to_axi_lite",
            "axi_to_axi_lite"
        ],
        "axi_to_axi_lite_intf": [
            "axi_to_axi_lite"
        ],
        "axi_xbar": [
            "axi_xbar"
        ],
        "axi_xbar_intf": [
            "ariane_gate_tb",
            "ariane_testharness",
            "axi_xbar"
        ],
        "checks": [],
        "addr_decode": [
            "axi_lite_mailbox",
            "contains",
            "has",
            "axi_lite_xbar",
            "axi_xbar"
        ],
        "binary_to_gray": [
            "cdc_fifo_gray",
            "cdc_fifo_gray"
        ],
        "implements": [],
        "cb_filter": [
            "implements"
        ],
        "hash_block": [
            "implements",
            "implements",
            "implements"
        ],
        "cc_onehot": [],
        "cdc_2phase": [
            "cdc_fifo_2phase"
        ],
        "cdc_2phase_src": [
            "cdc_2phase"
        ],
        "cdc_2phase_dst": [
            "cdc_2phase"
        ],
        "cdc_fifo_2phase": [
            "cdc_fifo_2phase"
        ],
        "cdc_fifo_gray": [],
        "cdc_fifo_gray_src": [
            "instantiates",
            "instantiates",
            "instantiates",
            "instantiates",
            "cdc_fifo_gray"
        ],
        "cdc_fifo_gray_dst": [
            "instantiates",
            "instantiates",
            "instantiates",
            "instantiates",
            "cdc_fifo_gray"
        ],
        "clk_div": [],
        "counter": [
            "acc_dispatcher",
            "acc_dispatcher",
            "acc_dispatcher",
            "acc_dispatcher",
            "logs",
            "implements",
            "counter",
            "has",
            "stream_delay"
        ],
        "delta_counter": [],
        "receives": [],
        "ecc_decode": [],
        "ecc_encode": [],
        "edge_detect": [],
        "edge_propagator": [],
        "edge_propagator_rx": [],
        "edge_propagator_tx": [],
        "exp_backoff": [
            "wt_dcache_missunit"
        ],
        "at": [],
        "fall_through_register": [
            "has",
            "has",
            "has",
            "at"
        ],
        "fifo_v3": [
            "mem_emul",
            "mem_emul",
            "tb_mem",
            "tb_mem",
            "axi_demux",
            "always",
            "axi_lite_demux",
            "axi_lite_demux",
            "axi_lite_mailbox",
            "axi_lite_mailbox",
            "multiplexes",
            "multiplexes",
            "contains",
            "axi_to_axi_lite"
        ],
        "gray_to_binary": [
            "cdc_fifo_gray",
            "cdc_fifo_gray",
            "cdc_fifo_gray",
            "cdc_fifo_gray"
        ],
        "id_queue": [
            "does",
            "axi_dw_downsizer"
        ],
        "differs": [],
        "isochronous_4phase_handshake": [],
        "isochronous_spill_register": [],
        "lfsr": [
            "cva6_icache",
            "wt_dcache_missunit",
            "is"
        ],
        "lfsr_16bit": [],
        "lfsr_8bit": [
            "miss_handler"
        ],
        "lzc": [
            "alu",
            "serdiv",
            "wt_dcache_mem",
            "wt_dcache_mem",
            "wt_dcache_missunit",
            "wt_dcache_wbuffer",
            "wt_dcache_wbuffer",
            "does",
            "axi_dw_downsizer",
            "axi_dw_upsizer",
            "is",
            "has"
        ],
        "max_counter": [
            "max_counter"
        ],
        "mv_filter": [],
        "onehot_to_bin": [
            "id_queue",
            "id_queue"
        ],
        "plru_tree": [],
        "calculates": [],
        "pads": [],
        "popcount": [
            "calculates"
        ],
        "timing": [],
        "the": [
            "is",
            "axi_dw_downsizer",
            "checks",
            "stream_xbar"
        ],
        "also": [],
        "rr_arb_tree": [
            "cva6",
            "issue_read_operands",
            "issue_read_operands",
            "issue_read_operands",
            "wt_dcache_wbuffer",
            "wt_dcache_wbuffer",
            "wt_dcache_wbuffer",
            "axi_demux",
            "axi_demux",
            "axi_dw_downsizer",
            "axi_dw_downsizer",
            "axi_dw_upsizer",
            "axi_dw_upsizer",
            "multiplexes",
            "multiplexes"
        ],
        "rstgen": [],
        "rstgen_bypass": [
            "rstgen"
        ],
        "serial_deglitch": [],
        "shift_reg": [
            "load_store_unit",
            "load_store_unit"
        ],
        "spill_register": [
            "axi_cut",
            "axi_cut",
            "axi_cut",
            "axi_cut",
            "axi_demux",
            "axi_demux",
            "axi_demux",
            "axi_lite_demux",
            "axi_lite_demux",
            "axi_lite_demux",
            "axi_lite_mailbox",
            "axi_lite_mailbox",
            "multiplexes",
            "multiplexes",
            "multiplexes",
            "multiplexes",
            "multiplexes",
            "contains",
            "contains",
            "has",
            "multiplexes",
            "multiplexes",
            "multiplexes",
            "multiplexes",
            "cdc_fifo_gray",
            "spill_register",
            "stream_xbar"
        ],
        "spill_register_flushable": [],
        "stream_arbiter": [
            "std_cache_subsystem",
            "std_cache_subsystem"
        ],
        "stream_arbiter_flushable": [
            "stream_arbiter"
        ],
        "stream_delay": [
            "that",
            "that",
            "that",
            "that",
            "that"
        ],
        "stream_demux": [],
        "stream_fifo": [
            "stream_fifo",
            "stream_to_mem"
        ],
        "stream_filter": [],
        "stream_fork": [],
        "stream_fork_dynamic": [],
        "stream_join": [],
        "stream_mux": [],
        "stream_omega_net": [
            "stream_omega_net"
        ],
        "stream_register": [
            "stream_register"
        ],
        "stream_to_mem": [],
        "stream_xbar": [
            "stream_xbar"
        ],
        "sub_per_hash": [],
        "sync": [],
        "sync_wedge": [
            "edge_detect",
            "sync_wedge"
        ],
        "unread": [
            "is",
            "instr_queue",
            "instr_queue"
        ],
        "clock_divider": [
            "clock_divider"
        ],
        "clock_divider_counter": [],
        "fifo": [
            "fifo"
        ],
        "fifo_v2": [
            "to",
            "fifo_v2"
        ],
        "generic_LFSR_8bit": [],
        "generic_fifo": [],
        "generic_fifo_adv": [],
        "prioarbiter": [
            "prioarbiter"
        ],
        "pulp_sync": [],
        "pulp_sync_wedge": [
            "edge_propagator_rx",
            "pulp_sync_wedge"
        ],
        "rrarbiter": [
            "to",
            "rrarbiter"
        ],
        "Testbench": [],
        "generates": [],
        "ClkRstGen": [
            "Testbench"
        ],
        "AsyncDpRam": [],
        "AsyncThreePortRam": [],
        "AxiBramLogger": [],
        "converts": [],
        "AxiToAxiLitePc": [],
        "performs": [],
        "BramDwc": [
            "Testbench",
            "Testbench",
            "BramLogger",
            "Top"
        ],
        "BramLogger": [],
        "SyncDpRam": [],
        "SyncSpRam": [],
        "SyncSpRamBeNx32": [],
        "SyncSpRamBeNx64": [],
        "SyncTpRam": [],
        "TdpBramArray": [
            "BramLogger"
        ],
        "Top": [],
        "tc_pwr_level_shifter_in": [],
        "cluster_clock_and2": [],
        "cluster_clock_gating": [
            "generic_fifo",
            "generic_fifo_adv"
        ],
        "cluster_level_shifter_in": [],
        "generic_memory": [],
        "generic_rom": [],
        "pad_functional_pd": [],
        "pulp_buffer": [],
        "pulp_clock_and2": [],
        "pulp_clock_gating": [
            "sync_wedge",
            "clock_divider",
            "pulp_sync_wedge"
        ],
        "pulp_clock_delay": [],
        "pulp_clock_gating_async": [],
        "pulp_level_shifter_in": [],
        "tc_clk_and2": [
            "cluster_clock_and2",
            "pulp_clock_and2"
        ],
        "tc_clk_gating": [
            "cluster_clock_and2",
            "pulp_clock_and2"
        ],
        "tc_sram": [
            "tc_sram"
        ],
        "tc_clk_mux2": [
            "cluster_clock_and2",
            "pulp_clock_and2"
        ],
        "tc_clk_delay": [],
        "issues": [],
        "cva6_instr_gen_tb_top": [],
        "axi_master_connect": [
            "cva6_tb_wrapper"
        ],
        "cva6_tb_wrapper": [],
        "uvmt_axi_assert": [],
        "uvmt_cva6_axi_assert": [
            "uvmt_axi_assert"
        ],
        "uvmt_cva6_dut_wrap": [
            "uvmt_cva6_dut_wrap",
            "uvmt_cva6_tb"
        ],
        "uvmt_cva6_tb": []
    },
    "module_graph_inverse": {
        "find_first_one": [],
        "instr_tracer": [
            "instr_tracer",
            "here"
        ],
        "contains": [
            "for",
            "for",
            "tc_sram_wrapper_cache_techno",
            "sram",
            "addr_decode",
            "spill_register",
            "spill_register",
            "axi_lite_regs_intf",
            "fifo_v3"
        ],
        "sram": [],
        "sram_cache": [],
        "tc_sram_wrapper": [
            "tc_sram_wrapper",
            "tc_sram_wrapper"
        ],
        "tc_sram_wrapper_cache_techno": [
            "tc_sram_wrapper_cache_techno"
        ],
        "acc_dispatcher": [
            "to",
            "counter",
            "counter",
            "counter",
            "counter"
        ],
        "alu": [
            "lzc"
        ],
        "amo_buffer": [
            "amo_buffer"
        ],
        "ariane_regfile_lol": [
            "ariane_regfile_lol"
        ],
        "ariane_regfile": [],
        "ariane_regfile_fpga": [],
        "axi_shim": [],
        "branch_unit": [
            "branch_unit"
        ],
        "commit_stage": [],
        "is": [
            "cva6_tlb",
            "cva6_shared_tlb",
            "cva6_ptw",
            "pmp",
            "always",
            "to",
            "lfsr",
            "the",
            "unread",
            "axi_id_remap_table",
            "axi_id_remap_table",
            "lzc",
            "axi_id_remap_intf",
            "axi_demux",
            "axi_id_prepend",
            "axi_id_serialize_intf"
        ],
        "compressed_decoder": [],
        "controller": [
            "from"
        ],
        "csr_buffer": [],
        "csr_regfile": [
            "and"
        ],
        "registers": [],
        "CSRs": [],
        "fired": [],
        "cva6": [
            "frontend",
            "id_stage",
            "issue_stage",
            "ex_stage",
            "commit_stage",
            "csr_regfile",
            "controller",
            "std_cache_subsystem",
            "rr_arb_tree",
            "instr_tracer"
        ],
        "cva6_accel_first_pass_decoder": [],
        "stub": [],
        "cva6_fifo_v3": [
            "cva6_fifo_v3"
        ],
        "cva6_rvfi": [],
        "cva6_rvfi_probes": [],
        "cvxif_compressed_if_driver": [],
        "cvxif_fu": [],
        "cvxif_issue_register_commit_if_driver": [],
        "decoder": [],
        "ex_stage": [],
        "fpu_wrap": [],
        "id_stage": [
            "id_stage",
            "cvxif_compressed_if_driver"
        ],
        "takes": [],
        "instr_realign": [],
        "issue_read_operands": [
            "cvxif_issue_register_commit_if_driver",
            "rr_arb_tree",
            "rr_arb_tree",
            "rr_arb_tree",
            "only",
            "ariane_regfile",
            "ariane_regfile"
        ],
        "issue_stage": [
            "issue_read_operands"
        ],
        "load_store_unit": [
            "load_unit",
            "shift_reg",
            "shift_reg"
        ],
        "load_unit": [],
        "lsu_bypass": [
            "will"
        ],
        "macro_decoder": [],
        "mult": [
            "multiplier",
            "serdiv"
        ],
        "multiplier": [],
        "perf_counters": [],
        "scoreboard": [
            "scoreboard"
        ],
        "serdiv": [
            "lzc"
        ],
        "store_buffer": [
            "is"
        ],
        "store_unit": [
            "store_buffer"
        ],
        "amo_alu": [],
        "axi_adapter": [],
        "cache_ctrl": [],
        "cva6_hpdcache_if_adapter": [],
        "cva6_hpdcache_subsystem": [
            "cva6_icache",
            "cva6_hpdcache_wrapper",
            "cva6_hpdcache_subsystem_axi_arbiter"
        ],
        "cva6_hpdcache_subsystem_axi_arbiter": [],
        "cva6_hpdcache_wrapper": [
            "cva6_hpdcache_if_adapter",
            "cva6_hpdcache_if_adapter"
        ],
        "cva6_icache": [
            "to",
            "lfsr",
            "sram_cache"
        ],
        "to": [
            "cva6_icache",
            "axi_shim",
            "cva6_fifo_v3",
            "cva6_fifo_v3",
            "cva6_fifo_v3",
            "cva6_fifo_v3",
            "cva6_fifo_v3",
            "cva6_fifo_v3",
            "rrarbiter",
            "fifo_v2"
        ],
        "cva6_icache_axi_wrapper": [],
        "miss_handler": [
            "axi_adapter_arbiter",
            "axi_adapter",
            "axi_adapter",
            "lfsr_8bit"
        ],
        "axi_adapter_arbiter": [],
        "std_cache_subsystem": [
            "cva6_icache_axi_wrapper",
            "std_nbdcache",
            "stream_arbiter",
            "stream_arbiter",
            "is"
        ],
        "std_nbdcache": [
            "miss_handler",
            "sram",
            "tag_cmp"
        ],
        "tag_cmp": [
            "tag_cmp"
        ],
        "wt_axi_adapter": [],
        "wt_cache_subsystem": [
            "wt_dcache",
            "wt_axi_adapter"
        ],
        "wt_dcache": [
            "wt_dcache_missunit",
            "wt_dcache_wbuffer",
            "wt_dcache_mem"
        ],
        "wt_dcache_ctrl": [],
        "wt_dcache_mem": [
            "lzc",
            "lzc"
        ],
        "wt_dcache_missunit": [
            "lzc",
            "lfsr",
            "exp_backoff"
        ],
        "wt_dcache_wbuffer": [
            "cva6_fifo_v3",
            "rr_arb_tree",
            "lzc",
            "lzc",
            "rr_arb_tree",
            "rr_arb_tree"
        ],
        "wt_l15_adapter": [],
        "cva6_mmu": [],
        "cva6_ptw": [],
        "cva6_shared_tlb": [],
        "cva6_tlb": [],
        "compressed_instr_decoder": [],
        "copro_alu": [],
        "cvxif_example_coprocessor": [
            "compressed_instr_decoder",
            "instr_decoder",
            "copro_alu"
        ],
        "instr_decoder": [],
        "bht": [
            "bht"
        ],
        "both": [],
        "btb": [],
        "interfaces": [
            "and",
            "of",
            "instr_queue"
        ],
        "frontend": [],
        "instr_queue": [
            "for",
            "cva6_fifo_v3",
            "unread",
            "unread"
        ],
        "instr_scan": [],
        "ras": [],
        "needs": [
            "logic"
        ],
        "logic": [
            "logic",
            "logic",
            "logic",
            "logic"
        ],
        "that": [
            "module",
            "stream_delay",
            "stream_delay",
            "stream_delay",
            "stream_delay",
            "stream_delay",
            "axi_delayer_intf"
        ],
        "pmp": [],
        "pmp_entry": [
            "pmp_entry"
        ],
        "pmp_tb": [
            "pmp"
        ],
        "bootrom": [
            "module"
        ],
        "axi_lite_interface": [],
        "clint": [
            "axi_lite_interface"
        ],
        "clint_sync_wedge": [],
        "module": [],
        "ariane_peripherals": [
            "ariane_peripherals",
            "mock_uart",
            "ariane_peripherals",
            "mock_uart"
        ],
        "ariane_xilinx": [
            "module",
            "dm_top",
            "axi_adapter",
            "ariane_peripherals",
            "fan_ctrl",
            "fan_ctrl",
            "fan_ctrl"
        ],
        "dm_top": [],
        "fan_ctrl": [
            "module"
        ],
        "ariane_verilog_wrap": [
            "ariane"
        ],
        "base": [],
        "riscv_peripherals": [
            "riscv_peripherals",
            "bootrom",
            "clint"
        ],
        "reset": [],
        "and": [],
        "ariane": [
            "cva6"
        ],
        "ariane_gate_tb": [
            "cva6_rvfi",
            "rvfi_tracer",
            "sram",
            "bootrom",
            "axi_xbar_intf",
            "mock_uart"
        ],
        "ariane_tb": [
            "ariane_testharness"
        ],
        "ariane_testharness": [
            "ariane_testharness",
            "bootrom",
            "axi_delayer_intf",
            "sram",
            "axi_xbar_intf",
            "clint",
            "ariane",
            "cva6_rvfi",
            "rvfi_tracer",
            "spike"
        ],
        "rvfi_tracer": [
            "rvfi_tracer"
        ],
        "SimDTM": [
            "module"
        ],
        "SimJTAG": [],
        "core_mem": [
            "core_mem"
        ],
        "dp_ram": [],
        "mock_uart": [
            "in"
        ],
        "spike": [
            "spike"
        ],
        "mem_emul": [
            "fifo_v3",
            "fifo_v3"
        ],
        "tb": [
            "mem_emul",
            "cva6_icache",
            "serdiv",
            "std_nbdcache",
            "wt_cache_subsystem",
            "tb_mem",
            "wt_dcache"
        ],
        "tlb_emul": [],
        "tb_mem": [
            "fifo_v3",
            "fifo_v3"
        ],
        "hpdcache_sram_1rw_00000006_0000001a_00000040": [],
        "hpdcache_sram_wbyteenable_1rw_00000007_00000040_00000080": [],
        "tc_sram_wrapper_256_64_00000008_00000001_00000001_none_0": [
            "tc_sram_wrapper_256_64_00000008_00000001_00000001_none_0"
        ],
        "filters": [
            "axi_atop_filter_intf"
        ],
        "guarantees": [],
        "ensures": [],
        "axi_atop_filter": [],
        "axi_atop_filter_intf": [],
        "does": [
            "axi_err_slv",
            "axi_burst_splitter_ax_chan",
            "axi_burst_splitter_counters",
            "lzc",
            "id_queue"
        ],
        "if": [],
        "axi_burst_splitter": [],
        "of": [
            "is"
        ],
        "axi_burst_splitter_ax_chan": [],
        "axi_burst_splitter_counters": [],
        "instantiates": [
            "axi_cdc",
            "axi_cdc_dst",
            "axi_cdc_intf",
            "axi_cdc_dst",
            "cdc_fifo_gray_dst",
            "cdc_fifo_gray_src",
            "cdc_fifo_gray_dst",
            "cdc_fifo_gray_src",
            "axi_cdc_src",
            "cdc_fifo_gray_src",
            "cdc_fifo_gray_dst",
            "cdc_fifo_gray_src",
            "cdc_fifo_gray_dst"
        ],
        "axi_cdc": [],
        "axi_cdc_intf": [],
        "axi_cdc_dst": [],
        "axi_cdc_src": [],
        "axi_cut": [
            "axi_cut",
            "spill_register",
            "spill_register",
            "spill_register",
            "spill_register",
            "axi_cut_intf"
        ],
        "axi_cut_intf": [],
        "axi_delayer": [],
        "axi_delayer_intf": [],
        "axi_demux": [
            "axi_demux",
            "fifo_v3",
            "spill_register",
            "spill_register",
            "rr_arb_tree",
            "spill_register",
            "rr_arb_tree",
            "axi_demux_intf"
        ],
        "param": [],
        "axi_demux_intf": [],
        "axi_dw_converter": [
            "axi_dw_converter",
            "axi_dw_converter_intf"
        ],
        "axi_dw_converter_intf": [],
        "axi_dw_downsizer": [
            "axi_dw_downsizer",
            "rr_arb_tree",
            "rr_arb_tree",
            "axi_err_slv",
            "axi_demux",
            "lzc",
            "id_queue",
            "the"
        ],
        "axi_dw_upsizer": [
            "axi_dw_upsizer",
            "rr_arb_tree",
            "rr_arb_tree",
            "axi_err_slv",
            "axi_demux",
            "lzc"
        ],
        "always": [
            "axi_err_slv",
            "fifo_v3"
        ],
        "optionally": [],
        "axi_err_slv": [],
        "may": [],
        "prepends": [],
        "axi_id_prepend": [],
        "retains": [],
        "axi_id_remap": [],
        "has": [
            "axi_lite_to_apb",
            "fall_through_register",
            "spill_register",
            "fall_through_register",
            "fall_through_register",
            "addr_decode",
            "axi_lite_to_apb_intf",
            "counter",
            "lzc"
        ],
        "axi_id_remap_table": [],
        "for": [],
        "axi_id_remap_intf": [],
        "maps": [],
        "axi_id_serialize": [],
        "axi_id_serialize_intf": [],
        "can": [
            "axi_isolate",
            "axi_iw_converter",
            "axi_id_serialize",
            "axi_iw_converter_intf"
        ],
        "counts": [],
        "axi_isolate": [],
        "axi_isolate_intf": [],
        "axi_iw_converter": [],
        "axi_iw_converter_intf": [],
        "axi_join_intf": [
            "module"
        ],
        "axi_lite_demux": [
            "axi_lite_demux",
            "spill_register",
            "fifo_v3",
            "spill_register",
            "fifo_v3",
            "spill_register",
            "axi_lite_demux_intf"
        ],
        "here": [],
        "axi_lite_demux_intf": [],
        "axi_lite_join_intf": [
            "module"
        ],
        "axi_lite_mailbox": [
            "axi_lite_mailbox",
            "fifo_v3",
            "fifo_v3",
            "spill_register",
            "addr_decode",
            "spill_register",
            "axi_lite_mailbox_intf"
        ],
        "axi_lite_mailbox_intf": [],
        "multiplexes": [
            "axi_lite_mux",
            "spill_register",
            "fifo_v3",
            "spill_register",
            "spill_register",
            "fifo_v3",
            "spill_register",
            "spill_register",
            "axi_lite_mux_intf",
            "rr_arb_tree",
            "spill_register",
            "spill_register",
            "rr_arb_tree",
            "spill_register",
            "spill_register",
            "axi_mux_intf"
        ],
        "axi_lite_mux": [],
        "axi_lite_mux_intf": [],
        "axi_lite_regs": [],
        "only": [],
        "axi_lite_regs_intf": [],
        "from": [],
        "will": [],
        "axi_lite_to_apb": [],
        "axi_lite_to_apb_intf": [],
        "axi_lite_to_axi": [],
        "axi_lite_xbar": [
            "axi_lite_xbar",
            "addr_decode",
            "axi_lite_demux",
            "axi_lite_to_axi",
            "axi_err_slv",
            "axi_lite_xbar_intf"
        ],
        "axi_lite_xbar_intf": [],
        "axi_modify_address": [
            "axi_modify_address"
        ],
        "axi_modify_address_intf": [],
        "axi_multicut": [
            "axi_multicut",
            "axi_multicut_intf"
        ],
        "axi_multicut_intf": [],
        "axi_mux": [],
        "axi_mux_intf": [],
        "axi_serializer": [],
        "axi_serializer_intf": [],
        "in": [
            "is"
        ],
        "axi_sim_mem": [],
        "logs": [
            "counter"
        ],
        "axi_chan_logger": [],
        "axi_to_axi_lite": [
            "axi_to_axi_lite",
            "axi_burst_splitter",
            "axi_to_axi_lite_id_reflect",
            "axi_to_axi_lite_id_reflect",
            "fifo_v3",
            "axi_to_axi_lite_intf"
        ],
        "handles": [],
        "axi_to_axi_lite_id_reflect": [],
        "axi_to_axi_lite_intf": [],
        "axi_xbar": [
            "axi_xbar",
            "addr_decode",
            "axi_demux",
            "axi_err_slv",
            "axi_xbar_intf"
        ],
        "axi_xbar_intf": [],
        "checks": [
            "the"
        ],
        "addr_decode": [],
        "binary_to_gray": [],
        "implements": [
            "cb_filter",
            "hash_block",
            "hash_block",
            "counter",
            "hash_block"
        ],
        "cb_filter": [],
        "hash_block": [],
        "cc_onehot": [],
        "cdc_2phase": [
            "of",
            "cdc_2phase_src",
            "cdc_2phase_dst"
        ],
        "cdc_2phase_src": [],
        "cdc_2phase_dst": [],
        "cdc_fifo_2phase": [
            "cdc_fifo_2phase",
            "cdc_2phase"
        ],
        "cdc_fifo_gray": [
            "cdc_fifo_gray_src",
            "cdc_fifo_gray_dst",
            "gray_to_binary",
            "gray_to_binary",
            "binary_to_gray",
            "gray_to_binary",
            "binary_to_gray",
            "gray_to_binary",
            "spill_register"
        ],
        "cdc_fifo_gray_src": [],
        "cdc_fifo_gray_dst": [],
        "clk_div": [],
        "counter": [
            "counter"
        ],
        "delta_counter": [],
        "receives": [],
        "ecc_decode": [],
        "ecc_encode": [],
        "edge_detect": [
            "module",
            "sync_wedge"
        ],
        "edge_propagator": [
            "module"
        ],
        "edge_propagator_rx": [
            "module",
            "pulp_sync_wedge"
        ],
        "edge_propagator_tx": [
            "module"
        ],
        "exp_backoff": [],
        "at": [
            "fall_through_register"
        ],
        "fall_through_register": [],
        "fifo_v3": [],
        "gray_to_binary": [],
        "id_queue": [
            "onehot_to_bin",
            "onehot_to_bin"
        ],
        "differs": [],
        "isochronous_4phase_handshake": [],
        "isochronous_spill_register": [],
        "lfsr": [],
        "lfsr_16bit": [],
        "lfsr_8bit": [],
        "lzc": [],
        "max_counter": [
            "max_counter"
        ],
        "mv_filter": [],
        "onehot_to_bin": [],
        "plru_tree": [],
        "calculates": [
            "popcount"
        ],
        "pads": [],
        "popcount": [],
        "timing": [],
        "the": [],
        "also": [],
        "rr_arb_tree": [],
        "rstgen": [
            "module",
            "rstgen_bypass"
        ],
        "rstgen_bypass": [],
        "serial_deglitch": [],
        "shift_reg": [],
        "spill_register": [
            "spill_register"
        ],
        "spill_register_flushable": [],
        "stream_arbiter": [
            "stream_arbiter_flushable"
        ],
        "stream_arbiter_flushable": [],
        "stream_delay": [
            "counter"
        ],
        "stream_demux": [],
        "stream_fifo": [
            "stream_fifo"
        ],
        "stream_filter": [
            "module"
        ],
        "stream_fork": [],
        "stream_fork_dynamic": [],
        "stream_join": [],
        "stream_mux": [],
        "stream_omega_net": [
            "stream_omega_net"
        ],
        "stream_register": [
            "stream_register"
        ],
        "stream_to_mem": [
            "stream_fifo"
        ],
        "stream_xbar": [
            "stream_xbar",
            "spill_register",
            "the"
        ],
        "sub_per_hash": [],
        "sync": [],
        "sync_wedge": [
            "sync_wedge",
            "pulp_clock_gating"
        ],
        "unread": [
            "module"
        ],
        "clock_divider": [
            "clock_divider",
            "pulp_clock_gating"
        ],
        "clock_divider_counter": [],
        "fifo": [
            "fifo"
        ],
        "fifo_v2": [
            "fifo_v2"
        ],
        "generic_LFSR_8bit": [],
        "generic_fifo": [
            "cluster_clock_gating"
        ],
        "generic_fifo_adv": [
            "cluster_clock_gating"
        ],
        "prioarbiter": [
            "prioarbiter"
        ],
        "pulp_sync": [],
        "pulp_sync_wedge": [
            "pulp_sync_wedge",
            "pulp_clock_gating"
        ],
        "rrarbiter": [
            "rrarbiter"
        ],
        "Testbench": [
            "ClkRstGen",
            "BramDwc",
            "BramDwc"
        ],
        "generates": [],
        "ClkRstGen": [],
        "AsyncDpRam": [],
        "AsyncThreePortRam": [],
        "AxiBramLogger": [],
        "converts": [],
        "AxiToAxiLitePc": [],
        "performs": [],
        "BramDwc": [],
        "BramLogger": [
            "TdpBramArray",
            "BramDwc"
        ],
        "SyncDpRam": [],
        "SyncSpRam": [],
        "SyncSpRamBeNx32": [],
        "SyncSpRamBeNx64": [],
        "SyncTpRam": [],
        "TdpBramArray": [],
        "Top": [
            "BramDwc"
        ],
        "tc_pwr_level_shifter_in": [
            "module",
            "module",
            "module",
            "module",
            "module",
            "module",
            "module",
            "module",
            "module"
        ],
        "cluster_clock_and2": [
            "module",
            "tc_clk_and2",
            "module",
            "tc_clk_gating",
            "module",
            "module",
            "tc_clk_mux2",
            "module"
        ],
        "cluster_clock_gating": [],
        "cluster_level_shifter_in": [
            "module",
            "module",
            "module",
            "module",
            "module"
        ],
        "generic_memory": [],
        "generic_rom": [],
        "pad_functional_pd": [
            "module",
            "module",
            "module",
            "module"
        ],
        "pulp_buffer": [
            "module"
        ],
        "pulp_clock_and2": [
            "module",
            "tc_clk_and2",
            "module",
            "tc_clk_gating",
            "module",
            "module",
            "tc_clk_mux2",
            "module",
            "module"
        ],
        "pulp_clock_gating": [],
        "pulp_clock_delay": [],
        "pulp_clock_gating_async": [],
        "pulp_level_shifter_in": [
            "module",
            "module",
            "module",
            "module",
            "module",
            "module",
            "module",
            "module"
        ],
        "tc_clk_and2": [
            "module",
            "module",
            "module",
            "module",
            "module",
            "module",
            "module",
            "module",
            "module",
            "module",
            "module"
        ],
        "tc_clk_gating": [],
        "tc_sram": [
            "tc_sram"
        ],
        "tc_clk_mux2": [],
        "tc_clk_delay": [],
        "issues": [],
        "cva6_instr_gen_tb_top": [],
        "axi_master_connect": [
            "module"
        ],
        "cva6_tb_wrapper": [
            "cva6",
            "rvfi_tracer",
            "axi_master_connect",
            "sram"
        ],
        "uvmt_axi_assert": [
            "uvmt_cva6_axi_assert"
        ],
        "uvmt_cva6_axi_assert": [],
        "uvmt_cva6_dut_wrap": [
            "uvmt_cva6_dut_wrap"
        ],
        "uvmt_cva6_tb": [
            "uvmt_cva6_dut_wrap",
            "for"
        ]
    }
}